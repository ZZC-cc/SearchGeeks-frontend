{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\n/**\n * To match accessibility requirement, we always provide an input in the component.\n * Other element will not set `tabindex` to avoid `onBlur` sequence problem.\n * For focused select, we set `aria-live=\"polite\"` to update the accessibility content.\n *\n * ref:\n * - keyboard: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role#Keyboard_interactions\n *\n * New api:\n * - listHeight\n * - listItemHeight\n * - component\n *\n * Remove deprecated api:\n * - multiple\n * - tags\n * - combobox\n * - firstActiveValue\n * - dropdownMenuStyle\n * - openClassName (Not list in api)\n *\n * Update:\n * - `backfill` only support `combobox` mode\n * - `combobox` mode not support `labelInValue` since it's meaningless\n * - `getInputElement` only support `combobox` mode\n * - `onChange` return OptionData instead of ReactNode\n * - `filterOption` `onChange` `onSelect` accept OptionData instead of ReactNode\n * - `combobox` mode trigger `onChange` will get `undefined` if no `value` match in Option\n * - `combobox` mode not support `optionLabelProp`\n */\nimport BaseSelect, { baseSelectPropsWithoutPrivate, isMultiple } from './BaseSelect';\nimport OptionList from './OptionList';\nimport useOptions from './hooks/useOptions';\nimport { useProvideSelectProps } from './SelectContext';\nimport useId from './hooks/useId';\nimport { fillFieldNames, flattenOptions, injectPropsWithOption } from './utils/valueUtil';\nimport warningProps from './utils/warningPropsUtil';\nimport { toArray } from './utils/commonUtil';\nimport useFilterOptions from './hooks/useFilterOptions';\nimport useCache from './hooks/useCache';\nimport { computed, defineComponent, ref, shallowRef, toRef, watchEffect } from 'vue';\nimport PropTypes from '../_util/vue-types';\nimport { initDefaultProps } from '../_util/props-util';\nimport useMergedState from '../_util/hooks/useMergedState';\nimport useState from '../_util/hooks/useState';\nimport { toReactive } from '../_util/toReactive';\nimport omit from '../_util/omit';\nvar OMIT_DOM_PROPS = ['inputValue'];\nexport function selectProps() {\n  return _extends(_extends({}, baseSelectPropsWithoutPrivate()), {\n    prefixCls: String,\n    id: String,\n    backfill: {\n      type: Boolean,\n      default: undefined\n    },\n    // >>> Field Names\n    fieldNames: Object,\n    // >>> Search\n    /** @deprecated Use `searchValue` instead */\n    inputValue: String,\n    searchValue: String,\n    onSearch: Function,\n    autoClearSearchValue: {\n      type: Boolean,\n      default: undefined\n    },\n    // >>> Select\n    onSelect: Function,\n    onDeselect: Function,\n    // >>> Options\n    /**\n     * In Select, `false` means do nothing.\n     * In TreeSelect, `false` will highlight match item.\n     * It's by design.\n     */\n    filterOption: {\n      type: [Boolean, Function],\n      default: undefined\n    },\n    filterSort: Function,\n    optionFilterProp: String,\n    optionLabelProp: String,\n    options: Array,\n    defaultActiveFirstOption: {\n      type: Boolean,\n      default: undefined\n    },\n    virtual: {\n      type: Boolean,\n      default: undefined\n    },\n    listHeight: Number,\n    listItemHeight: Number,\n    // >>> Icon\n    menuItemSelectedIcon: PropTypes.any,\n    mode: String,\n    labelInValue: {\n      type: Boolean,\n      default: undefined\n    },\n    value: PropTypes.any,\n    defaultValue: PropTypes.any,\n    onChange: Function,\n    children: Array\n  });\n}\nfunction isRawValue(value) {\n  return !value || _typeof(value) !== 'object';\n}\nexport default defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'Select',\n  inheritAttrs: false,\n  props: initDefaultProps(selectProps(), {\n    prefixCls: 'vc-select',\n    autoClearSearchValue: true,\n    listHeight: 200,\n    listItemHeight: 20,\n    dropdownMatchSelectWidth: true\n  }),\n  setup: function setup(props, _ref) {\n    var expose = _ref.expose,\n      attrs = _ref.attrs,\n      slots = _ref.slots;\n    var mergedId = useId(toRef(props, 'id'));\n    var multiple = computed(function () {\n      return isMultiple(props.mode);\n    });\n    var childrenAsData = computed(function () {\n      return !!(!props.options && props.children);\n    });\n    var mergedFilterOption = computed(function () {\n      if (props.filterOption === undefined && props.mode === 'combobox') {\n        return false;\n      }\n      return props.filterOption;\n    });\n    // ========================= FieldNames =========================\n    var mergedFieldNames = computed(function () {\n      return fillFieldNames(props.fieldNames, childrenAsData.value);\n    });\n    // =========================== Search ===========================\n    var _useMergedState = useMergedState('', {\n        value: computed(function () {\n          return props.searchValue !== undefined ? props.searchValue : props.inputValue;\n        }),\n        postState: function postState(search) {\n          return search || '';\n        }\n      }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedSearchValue = _useMergedState2[0],\n      setSearchValue = _useMergedState2[1];\n    // =========================== Option ===========================\n    var parsedOptions = useOptions(toRef(props, 'options'), toRef(props, 'children'), mergedFieldNames);\n    var valueOptions = parsedOptions.valueOptions,\n      labelOptions = parsedOptions.labelOptions,\n      mergedOptions = parsedOptions.options;\n    // ========================= Wrap Value =========================\n    var convert2LabelValues = function convert2LabelValues(draftValues) {\n      // Convert to array\n      var valueList = toArray(draftValues);\n      // Convert to labelInValue type\n      return valueList.map(function (val) {\n        var _a, _b;\n        var rawValue;\n        var rawLabel;\n        var rawKey;\n        var rawDisabled;\n        // Fill label & value\n        if (isRawValue(val)) {\n          rawValue = val;\n        } else {\n          rawKey = val.key;\n          rawLabel = val.label;\n          rawValue = (_a = val.value) !== null && _a !== void 0 ? _a : rawKey;\n        }\n        var option = valueOptions.value.get(rawValue);\n        if (option) {\n          // Fill missing props\n          if (rawLabel === undefined) rawLabel = option === null || option === void 0 ? void 0 : option[props.optionLabelProp || mergedFieldNames.value.label];\n          if (rawKey === undefined) rawKey = (_b = option === null || option === void 0 ? void 0 : option.key) !== null && _b !== void 0 ? _b : rawValue;\n          rawDisabled = option === null || option === void 0 ? void 0 : option.disabled;\n          // Warning if label not same as provided\n          // if (process.env.NODE_ENV !== 'production' && !isRawValue(val)) {\n          //   const optionLabel = option?.[mergedFieldNames.value.label];\n          //   if (optionLabel !== undefined && optionLabel !== rawLabel) {\n          //     warning(false, '`label` of `value` is not same as `label` in Select options.');\n          //   }\n          // }\n        }\n\n        return {\n          label: rawLabel,\n          value: rawValue,\n          key: rawKey,\n          disabled: rawDisabled,\n          option: option\n        };\n      });\n    };\n    // =========================== Values ===========================\n    var _useMergedState3 = useMergedState(props.defaultValue, {\n        value: toRef(props, 'value')\n      }),\n      _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n      internalValue = _useMergedState4[0],\n      setInternalValue = _useMergedState4[1];\n    // Merged value with LabelValueType\n    var rawLabeledValues = computed(function () {\n      var _a;\n      var values = convert2LabelValues(internalValue.value);\n      // combobox no need save value when it's empty\n      if (props.mode === 'combobox' && !((_a = values[0]) === null || _a === void 0 ? void 0 : _a.value)) {\n        return [];\n      }\n      return values;\n    });\n    // Fill label with cache to avoid option remove\n    var _useCache = useCache(rawLabeledValues, valueOptions),\n      _useCache2 = _slicedToArray(_useCache, 2),\n      mergedValues = _useCache2[0],\n      getMixedOption = _useCache2[1];\n    var displayValues = computed(function () {\n      // `null` need show as placeholder instead\n      // https://github.com/ant-design/ant-design/issues/25057\n      if (!props.mode && mergedValues.value.length === 1) {\n        var firstValue = mergedValues.value[0];\n        if (firstValue.value === null && (firstValue.label === null || firstValue.label === undefined)) {\n          return [];\n        }\n      }\n      return mergedValues.value.map(function (item) {\n        var _a;\n        return _extends(_extends({}, item), {\n          label: (_a = typeof item.label === 'function' ? item.label() : item.label) !== null && _a !== void 0 ? _a : item.value\n        });\n      });\n    });\n    /** Convert `displayValues` to raw value type set */\n    var rawValues = computed(function () {\n      return new Set(mergedValues.value.map(function (val) {\n        return val.value;\n      }));\n    });\n    watchEffect(function () {\n      var _a;\n      if (props.mode === 'combobox') {\n        var strValue = (_a = mergedValues.value[0]) === null || _a === void 0 ? void 0 : _a.value;\n        if (strValue !== undefined && strValue !== null) {\n          setSearchValue(String(strValue));\n        }\n      }\n    }, {\n      flush: 'post'\n    });\n    // ======================= Display Option =======================\n    // Create a placeholder item if not exist in `options`\n    var createTagOption = function createTagOption(val, label) {\n      var _ref2;\n      var mergedLabel = label !== null && label !== void 0 ? label : val;\n      return _ref2 = {}, _defineProperty(_ref2, mergedFieldNames.value.value, val), _defineProperty(_ref2, mergedFieldNames.value.label, mergedLabel), _ref2;\n    };\n    // Fill tag as option if mode is `tags`\n    var filledTagOptions = shallowRef();\n    watchEffect(function () {\n      if (props.mode !== 'tags') {\n        filledTagOptions.value = mergedOptions.value;\n        return;\n      }\n      // >>> Tag mode\n      var cloneOptions = mergedOptions.value.slice();\n      // Check if value exist in options (include new patch item)\n      var existOptions = function existOptions(val) {\n        return valueOptions.value.has(val);\n      };\n      // Fill current value as option\n      _toConsumableArray(mergedValues.value).sort(function (a, b) {\n        return a.value < b.value ? -1 : 1;\n      }).forEach(function (item) {\n        var val = item.value;\n        if (!existOptions(val)) {\n          cloneOptions.push(createTagOption(val, item.label));\n        }\n      });\n      filledTagOptions.value = cloneOptions;\n    });\n    var filteredOptions = useFilterOptions(filledTagOptions, mergedFieldNames, mergedSearchValue, mergedFilterOption, toRef(props, 'optionFilterProp'));\n    // Fill options with search value if needed\n    var filledSearchOptions = computed(function () {\n      if (props.mode !== 'tags' || !mergedSearchValue.value || filteredOptions.value.some(function (item) {\n        return item[props.optionFilterProp || 'value'] === mergedSearchValue.value;\n      })) {\n        return filteredOptions.value;\n      }\n      // Fill search value as option\n      return [createTagOption(mergedSearchValue.value)].concat(_toConsumableArray(filteredOptions.value));\n    });\n    var orderedFilteredOptions = computed(function () {\n      if (!props.filterSort) {\n        return filledSearchOptions.value;\n      }\n      return _toConsumableArray(filledSearchOptions.value).sort(function (a, b) {\n        return props.filterSort(a, b);\n      });\n    });\n    var displayOptions = computed(function () {\n      return flattenOptions(orderedFilteredOptions.value, {\n        fieldNames: mergedFieldNames.value,\n        childrenAsData: childrenAsData.value\n      });\n    });\n    // =========================== Change ===========================\n    var triggerChange = function triggerChange(values) {\n      var labeledValues = convert2LabelValues(values);\n      setInternalValue(labeledValues);\n      if (props.onChange && (\n      // Trigger event only when value changed\n      labeledValues.length !== mergedValues.value.length || labeledValues.some(function (newVal, index) {\n        var _a;\n        return ((_a = mergedValues.value[index]) === null || _a === void 0 ? void 0 : _a.value) !== (newVal === null || newVal === void 0 ? void 0 : newVal.value);\n      }))) {\n        var returnValues = props.labelInValue ? labeledValues.map(function (v) {\n          return _extends(_extends({}, v), {\n            originLabel: v.label,\n            label: typeof v.label === 'function' ? v.label() : v.label\n          });\n        }) : labeledValues.map(function (v) {\n          return v.value;\n        });\n        var returnOptions = labeledValues.map(function (v) {\n          return injectPropsWithOption(getMixedOption(v.value));\n        });\n        props.onChange(\n        // Value\n        multiple.value ? returnValues : returnValues[0],\n        // Option\n        multiple.value ? returnOptions : returnOptions[0]);\n      }\n    };\n    // ======================= Accessibility ========================\n    var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeValue = _useState2[0],\n      setActiveValue = _useState2[1];\n    var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      accessibilityIndex = _useState4[0],\n      setAccessibilityIndex = _useState4[1];\n    var mergedDefaultActiveFirstOption = computed(function () {\n      return props.defaultActiveFirstOption !== undefined ? props.defaultActiveFirstOption : props.mode !== 'combobox';\n    });\n    var onActiveValue = function onActiveValue(active, index) {\n      var _ref3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref3$source = _ref3.source,\n        source = _ref3$source === void 0 ? 'keyboard' : _ref3$source;\n      setAccessibilityIndex(index);\n      if (props.backfill && props.mode === 'combobox' && active !== null && source === 'keyboard') {\n        setActiveValue(String(active));\n      }\n    };\n    // ========================= OptionList =========================\n    var triggerSelect = function triggerSelect(val, selected) {\n      var getSelectEnt = function getSelectEnt() {\n        var _a;\n        var option = getMixedOption(val);\n        var originLabel = option === null || option === void 0 ? void 0 : option[mergedFieldNames.value.label];\n        return [props.labelInValue ? {\n          label: typeof originLabel === 'function' ? originLabel() : originLabel,\n          originLabel: originLabel,\n          value: val,\n          key: (_a = option === null || option === void 0 ? void 0 : option.key) !== null && _a !== void 0 ? _a : val\n        } : val, injectPropsWithOption(option)];\n      };\n      if (selected && props.onSelect) {\n        var _getSelectEnt = getSelectEnt(),\n          _getSelectEnt2 = _slicedToArray(_getSelectEnt, 2),\n          wrappedValue = _getSelectEnt2[0],\n          option = _getSelectEnt2[1];\n        props.onSelect(wrappedValue, option);\n      } else if (!selected && props.onDeselect) {\n        var _getSelectEnt3 = getSelectEnt(),\n          _getSelectEnt4 = _slicedToArray(_getSelectEnt3, 2),\n          _wrappedValue = _getSelectEnt4[0],\n          _option = _getSelectEnt4[1];\n        props.onDeselect(_wrappedValue, _option);\n      }\n    };\n    // Used for OptionList selection\n    var onInternalSelect = function onInternalSelect(val, info) {\n      var cloneValues;\n      // Single mode always trigger select only with option list\n      var mergedSelect = multiple.value ? info.selected : true;\n      if (mergedSelect) {\n        cloneValues = multiple.value ? [].concat(_toConsumableArray(mergedValues.value), [val]) : [val];\n      } else {\n        cloneValues = mergedValues.value.filter(function (v) {\n          return v.value !== val;\n        });\n      }\n      triggerChange(cloneValues);\n      triggerSelect(val, mergedSelect);\n      // Clean search value if single or configured\n      if (props.mode === 'combobox') {\n        // setSearchValue(String(val));\n        setActiveValue('');\n      } else if (!multiple.value || props.autoClearSearchValue) {\n        setSearchValue('');\n        setActiveValue('');\n      }\n    };\n    // ======================= Display Change =======================\n    // BaseSelect display values change\n    var onDisplayValuesChange = function onDisplayValuesChange(nextValues, info) {\n      triggerChange(nextValues);\n      if (info.type === 'remove' || info.type === 'clear') {\n        info.values.forEach(function (item) {\n          triggerSelect(item.value, false);\n        });\n      }\n    };\n    // =========================== Search ===========================\n    var onInternalSearch = function onInternalSearch(searchText, info) {\n      var _a;\n      setSearchValue(searchText);\n      setActiveValue(null);\n      // [Submit] Tag mode should flush input\n      if (info.source === 'submit') {\n        var formatted = (searchText || '').trim();\n        // prevent empty tags from appearing when you click the Enter button\n        if (formatted) {\n          var newRawValues = Array.from(new Set([].concat(_toConsumableArray(rawValues.value), [formatted])));\n          triggerChange(newRawValues);\n          triggerSelect(formatted, true);\n          setSearchValue('');\n        }\n        return;\n      }\n      if (info.source !== 'blur') {\n        if (props.mode === 'combobox') {\n          triggerChange(searchText);\n        }\n        (_a = props.onSearch) === null || _a === void 0 ? void 0 : _a.call(props, searchText);\n      }\n    };\n    var onInternalSearchSplit = function onInternalSearchSplit(words) {\n      var patchValues = words;\n      if (props.mode !== 'tags') {\n        patchValues = words.map(function (word) {\n          var opt = labelOptions.value.get(word);\n          return opt === null || opt === void 0 ? void 0 : opt.value;\n        }).filter(function (val) {\n          return val !== undefined;\n        });\n      }\n      var newRawValues = Array.from(new Set([].concat(_toConsumableArray(rawValues.value), _toConsumableArray(patchValues))));\n      triggerChange(newRawValues);\n      newRawValues.forEach(function (newRawValue) {\n        triggerSelect(newRawValue, true);\n      });\n    };\n    var realVirtual = computed(function () {\n      return props.virtual !== false && props.dropdownMatchSelectWidth !== false;\n    });\n    useProvideSelectProps(toReactive(_extends(_extends({}, parsedOptions), {\n      flattenOptions: displayOptions,\n      onActiveValue: onActiveValue,\n      defaultActiveFirstOption: mergedDefaultActiveFirstOption,\n      onSelect: onInternalSelect,\n      menuItemSelectedIcon: toRef(props, 'menuItemSelectedIcon'),\n      rawValues: rawValues,\n      fieldNames: mergedFieldNames,\n      virtual: realVirtual,\n      listHeight: toRef(props, 'listHeight'),\n      listItemHeight: toRef(props, 'listItemHeight'),\n      childrenAsData: childrenAsData\n    })));\n    // ========================== Warning ===========================\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(function () {\n        warningProps(props);\n      }, {\n        flush: 'post'\n      });\n    }\n    var selectRef = ref();\n    expose({\n      focus: function focus() {\n        var _a;\n        (_a = selectRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      blur: function blur() {\n        var _a;\n        (_a = selectRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n      },\n      scrollTo: function scrollTo(arg) {\n        var _a;\n        (_a = selectRef.value) === null || _a === void 0 ? void 0 : _a.scrollTo(arg);\n      }\n    });\n    var pickProps = computed(function () {\n      return omit(props, ['id', 'mode', 'prefixCls', 'backfill', 'fieldNames',\n      // Search\n      'inputValue', 'searchValue', 'onSearch', 'autoClearSearchValue',\n      // Select\n      'onSelect', 'onDeselect', 'dropdownMatchSelectWidth',\n      // Options\n      'filterOption', 'filterSort', 'optionFilterProp', 'optionLabelProp', 'options', 'children', 'defaultActiveFirstOption', 'menuItemSelectedIcon', 'virtual', 'listHeight', 'listItemHeight',\n      // Value\n      'value', 'defaultValue', 'labelInValue', 'onChange']);\n    });\n    return function () {\n      return _createVNode(BaseSelect, _objectSpread(_objectSpread(_objectSpread({}, pickProps.value), attrs), {}, {\n        \"id\": mergedId,\n        \"prefixCls\": props.prefixCls,\n        \"ref\": selectRef,\n        \"omitDomProps\": OMIT_DOM_PROPS,\n        \"mode\": props.mode,\n        \"displayValues\": displayValues.value,\n        \"onDisplayValuesChange\": onDisplayValuesChange,\n        \"searchValue\": mergedSearchValue.value,\n        \"onSearch\": onInternalSearch,\n        \"onSearchSplit\": onInternalSearchSplit,\n        \"dropdownMatchSelectWidth\": props.dropdownMatchSelectWidth,\n        \"OptionList\": OptionList,\n        \"emptyOptions\": !displayOptions.value.length,\n        \"activeValue\": activeValue.value,\n        \"activeDescendantId\": \"\".concat(mergedId, \"_list_\").concat(accessibilityIndex.value)\n      }), slots);\n    };\n  }\n});","map":{"version":3,"names":["_objectSpread","_toConsumableArray","_defineProperty","_slicedToArray","_typeof","_extends","createVNode","_createVNode","resolveDirective","_resolveDirective","BaseSelect","baseSelectPropsWithoutPrivate","isMultiple","OptionList","useOptions","useProvideSelectProps","useId","fillFieldNames","flattenOptions","injectPropsWithOption","warningProps","toArray","useFilterOptions","useCache","computed","defineComponent","ref","shallowRef","toRef","watchEffect","PropTypes","initDefaultProps","useMergedState","useState","toReactive","omit","OMIT_DOM_PROPS","selectProps","prefixCls","String","id","backfill","type","Boolean","default","undefined","fieldNames","Object","inputValue","searchValue","onSearch","Function","autoClearSearchValue","onSelect","onDeselect","filterOption","filterSort","optionFilterProp","optionLabelProp","options","Array","defaultActiveFirstOption","virtual","listHeight","Number","listItemHeight","menuItemSelectedIcon","any","mode","labelInValue","value","defaultValue","onChange","children","isRawValue","compatConfig","MODE","name","inheritAttrs","props","dropdownMatchSelectWidth","setup","_ref","expose","attrs","slots","mergedId","multiple","childrenAsData","mergedFilterOption","mergedFieldNames","_useMergedState","postState","search","_useMergedState2","mergedSearchValue","setSearchValue","parsedOptions","valueOptions","labelOptions","mergedOptions","convert2LabelValues","draftValues","valueList","map","val","_a","_b","rawValue","rawLabel","rawKey","rawDisabled","key","label","option","get","disabled","_useMergedState3","_useMergedState4","internalValue","setInternalValue","rawLabeledValues","values","_useCache","_useCache2","mergedValues","getMixedOption","displayValues","length","firstValue","item","rawValues","Set","strValue","flush","createTagOption","_ref2","mergedLabel","filledTagOptions","cloneOptions","slice","existOptions","has","sort","a","b","forEach","push","filteredOptions","filledSearchOptions","some","concat","orderedFilteredOptions","displayOptions","triggerChange","labeledValues","newVal","index","returnValues","v","originLabel","returnOptions","_useState","_useState2","activeValue","setActiveValue","_useState3","_useState4","accessibilityIndex","setAccessibilityIndex","mergedDefaultActiveFirstOption","onActiveValue","active","_ref3","arguments","_ref3$source","source","triggerSelect","selected","getSelectEnt","_getSelectEnt","_getSelectEnt2","wrappedValue","_getSelectEnt3","_getSelectEnt4","_wrappedValue","_option","onInternalSelect","info","cloneValues","mergedSelect","filter","onDisplayValuesChange","nextValues","onInternalSearch","searchText","formatted","trim","newRawValues","from","call","onInternalSearchSplit","words","patchValues","word","opt","newRawValue","realVirtual","process","env","NODE_ENV","selectRef","focus","blur","scrollTo","arg","pickProps"],"sources":["D:/Desktop/Code/SearchGeeks/SearchGeeks-frontend/node_modules/ant-design-vue/es/vc-select/Select.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\n/**\n * To match accessibility requirement, we always provide an input in the component.\n * Other element will not set `tabindex` to avoid `onBlur` sequence problem.\n * For focused select, we set `aria-live=\"polite\"` to update the accessibility content.\n *\n * ref:\n * - keyboard: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role#Keyboard_interactions\n *\n * New api:\n * - listHeight\n * - listItemHeight\n * - component\n *\n * Remove deprecated api:\n * - multiple\n * - tags\n * - combobox\n * - firstActiveValue\n * - dropdownMenuStyle\n * - openClassName (Not list in api)\n *\n * Update:\n * - `backfill` only support `combobox` mode\n * - `combobox` mode not support `labelInValue` since it's meaningless\n * - `getInputElement` only support `combobox` mode\n * - `onChange` return OptionData instead of ReactNode\n * - `filterOption` `onChange` `onSelect` accept OptionData instead of ReactNode\n * - `combobox` mode trigger `onChange` will get `undefined` if no `value` match in Option\n * - `combobox` mode not support `optionLabelProp`\n */\nimport BaseSelect, { baseSelectPropsWithoutPrivate, isMultiple } from './BaseSelect';\nimport OptionList from './OptionList';\nimport useOptions from './hooks/useOptions';\nimport { useProvideSelectProps } from './SelectContext';\nimport useId from './hooks/useId';\nimport { fillFieldNames, flattenOptions, injectPropsWithOption } from './utils/valueUtil';\nimport warningProps from './utils/warningPropsUtil';\nimport { toArray } from './utils/commonUtil';\nimport useFilterOptions from './hooks/useFilterOptions';\nimport useCache from './hooks/useCache';\nimport { computed, defineComponent, ref, shallowRef, toRef, watchEffect } from 'vue';\nimport PropTypes from '../_util/vue-types';\nimport { initDefaultProps } from '../_util/props-util';\nimport useMergedState from '../_util/hooks/useMergedState';\nimport useState from '../_util/hooks/useState';\nimport { toReactive } from '../_util/toReactive';\nimport omit from '../_util/omit';\nvar OMIT_DOM_PROPS = ['inputValue'];\nexport function selectProps() {\n  return _extends(_extends({}, baseSelectPropsWithoutPrivate()), {\n    prefixCls: String,\n    id: String,\n    backfill: {\n      type: Boolean,\n      default: undefined\n    },\n    // >>> Field Names\n    fieldNames: Object,\n    // >>> Search\n    /** @deprecated Use `searchValue` instead */\n    inputValue: String,\n    searchValue: String,\n    onSearch: Function,\n    autoClearSearchValue: {\n      type: Boolean,\n      default: undefined\n    },\n    // >>> Select\n    onSelect: Function,\n    onDeselect: Function,\n    // >>> Options\n    /**\n     * In Select, `false` means do nothing.\n     * In TreeSelect, `false` will highlight match item.\n     * It's by design.\n     */\n    filterOption: {\n      type: [Boolean, Function],\n      default: undefined\n    },\n    filterSort: Function,\n    optionFilterProp: String,\n    optionLabelProp: String,\n    options: Array,\n    defaultActiveFirstOption: {\n      type: Boolean,\n      default: undefined\n    },\n    virtual: {\n      type: Boolean,\n      default: undefined\n    },\n    listHeight: Number,\n    listItemHeight: Number,\n    // >>> Icon\n    menuItemSelectedIcon: PropTypes.any,\n    mode: String,\n    labelInValue: {\n      type: Boolean,\n      default: undefined\n    },\n    value: PropTypes.any,\n    defaultValue: PropTypes.any,\n    onChange: Function,\n    children: Array\n  });\n}\nfunction isRawValue(value) {\n  return !value || _typeof(value) !== 'object';\n}\nexport default defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'Select',\n  inheritAttrs: false,\n  props: initDefaultProps(selectProps(), {\n    prefixCls: 'vc-select',\n    autoClearSearchValue: true,\n    listHeight: 200,\n    listItemHeight: 20,\n    dropdownMatchSelectWidth: true\n  }),\n  setup: function setup(props, _ref) {\n    var expose = _ref.expose,\n      attrs = _ref.attrs,\n      slots = _ref.slots;\n    var mergedId = useId(toRef(props, 'id'));\n    var multiple = computed(function () {\n      return isMultiple(props.mode);\n    });\n    var childrenAsData = computed(function () {\n      return !!(!props.options && props.children);\n    });\n    var mergedFilterOption = computed(function () {\n      if (props.filterOption === undefined && props.mode === 'combobox') {\n        return false;\n      }\n      return props.filterOption;\n    });\n    // ========================= FieldNames =========================\n    var mergedFieldNames = computed(function () {\n      return fillFieldNames(props.fieldNames, childrenAsData.value);\n    });\n    // =========================== Search ===========================\n    var _useMergedState = useMergedState('', {\n        value: computed(function () {\n          return props.searchValue !== undefined ? props.searchValue : props.inputValue;\n        }),\n        postState: function postState(search) {\n          return search || '';\n        }\n      }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedSearchValue = _useMergedState2[0],\n      setSearchValue = _useMergedState2[1];\n    // =========================== Option ===========================\n    var parsedOptions = useOptions(toRef(props, 'options'), toRef(props, 'children'), mergedFieldNames);\n    var valueOptions = parsedOptions.valueOptions,\n      labelOptions = parsedOptions.labelOptions,\n      mergedOptions = parsedOptions.options;\n    // ========================= Wrap Value =========================\n    var convert2LabelValues = function convert2LabelValues(draftValues) {\n      // Convert to array\n      var valueList = toArray(draftValues);\n      // Convert to labelInValue type\n      return valueList.map(function (val) {\n        var _a, _b;\n        var rawValue;\n        var rawLabel;\n        var rawKey;\n        var rawDisabled;\n        // Fill label & value\n        if (isRawValue(val)) {\n          rawValue = val;\n        } else {\n          rawKey = val.key;\n          rawLabel = val.label;\n          rawValue = (_a = val.value) !== null && _a !== void 0 ? _a : rawKey;\n        }\n        var option = valueOptions.value.get(rawValue);\n        if (option) {\n          // Fill missing props\n          if (rawLabel === undefined) rawLabel = option === null || option === void 0 ? void 0 : option[props.optionLabelProp || mergedFieldNames.value.label];\n          if (rawKey === undefined) rawKey = (_b = option === null || option === void 0 ? void 0 : option.key) !== null && _b !== void 0 ? _b : rawValue;\n          rawDisabled = option === null || option === void 0 ? void 0 : option.disabled;\n          // Warning if label not same as provided\n          // if (process.env.NODE_ENV !== 'production' && !isRawValue(val)) {\n          //   const optionLabel = option?.[mergedFieldNames.value.label];\n          //   if (optionLabel !== undefined && optionLabel !== rawLabel) {\n          //     warning(false, '`label` of `value` is not same as `label` in Select options.');\n          //   }\n          // }\n        }\n\n        return {\n          label: rawLabel,\n          value: rawValue,\n          key: rawKey,\n          disabled: rawDisabled,\n          option: option\n        };\n      });\n    };\n    // =========================== Values ===========================\n    var _useMergedState3 = useMergedState(props.defaultValue, {\n        value: toRef(props, 'value')\n      }),\n      _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n      internalValue = _useMergedState4[0],\n      setInternalValue = _useMergedState4[1];\n    // Merged value with LabelValueType\n    var rawLabeledValues = computed(function () {\n      var _a;\n      var values = convert2LabelValues(internalValue.value);\n      // combobox no need save value when it's empty\n      if (props.mode === 'combobox' && !((_a = values[0]) === null || _a === void 0 ? void 0 : _a.value)) {\n        return [];\n      }\n      return values;\n    });\n    // Fill label with cache to avoid option remove\n    var _useCache = useCache(rawLabeledValues, valueOptions),\n      _useCache2 = _slicedToArray(_useCache, 2),\n      mergedValues = _useCache2[0],\n      getMixedOption = _useCache2[1];\n    var displayValues = computed(function () {\n      // `null` need show as placeholder instead\n      // https://github.com/ant-design/ant-design/issues/25057\n      if (!props.mode && mergedValues.value.length === 1) {\n        var firstValue = mergedValues.value[0];\n        if (firstValue.value === null && (firstValue.label === null || firstValue.label === undefined)) {\n          return [];\n        }\n      }\n      return mergedValues.value.map(function (item) {\n        var _a;\n        return _extends(_extends({}, item), {\n          label: (_a = typeof item.label === 'function' ? item.label() : item.label) !== null && _a !== void 0 ? _a : item.value\n        });\n      });\n    });\n    /** Convert `displayValues` to raw value type set */\n    var rawValues = computed(function () {\n      return new Set(mergedValues.value.map(function (val) {\n        return val.value;\n      }));\n    });\n    watchEffect(function () {\n      var _a;\n      if (props.mode === 'combobox') {\n        var strValue = (_a = mergedValues.value[0]) === null || _a === void 0 ? void 0 : _a.value;\n        if (strValue !== undefined && strValue !== null) {\n          setSearchValue(String(strValue));\n        }\n      }\n    }, {\n      flush: 'post'\n    });\n    // ======================= Display Option =======================\n    // Create a placeholder item if not exist in `options`\n    var createTagOption = function createTagOption(val, label) {\n      var _ref2;\n      var mergedLabel = label !== null && label !== void 0 ? label : val;\n      return _ref2 = {}, _defineProperty(_ref2, mergedFieldNames.value.value, val), _defineProperty(_ref2, mergedFieldNames.value.label, mergedLabel), _ref2;\n    };\n    // Fill tag as option if mode is `tags`\n    var filledTagOptions = shallowRef();\n    watchEffect(function () {\n      if (props.mode !== 'tags') {\n        filledTagOptions.value = mergedOptions.value;\n        return;\n      }\n      // >>> Tag mode\n      var cloneOptions = mergedOptions.value.slice();\n      // Check if value exist in options (include new patch item)\n      var existOptions = function existOptions(val) {\n        return valueOptions.value.has(val);\n      };\n      // Fill current value as option\n      _toConsumableArray(mergedValues.value).sort(function (a, b) {\n        return a.value < b.value ? -1 : 1;\n      }).forEach(function (item) {\n        var val = item.value;\n        if (!existOptions(val)) {\n          cloneOptions.push(createTagOption(val, item.label));\n        }\n      });\n      filledTagOptions.value = cloneOptions;\n    });\n    var filteredOptions = useFilterOptions(filledTagOptions, mergedFieldNames, mergedSearchValue, mergedFilterOption, toRef(props, 'optionFilterProp'));\n    // Fill options with search value if needed\n    var filledSearchOptions = computed(function () {\n      if (props.mode !== 'tags' || !mergedSearchValue.value || filteredOptions.value.some(function (item) {\n        return item[props.optionFilterProp || 'value'] === mergedSearchValue.value;\n      })) {\n        return filteredOptions.value;\n      }\n      // Fill search value as option\n      return [createTagOption(mergedSearchValue.value)].concat(_toConsumableArray(filteredOptions.value));\n    });\n    var orderedFilteredOptions = computed(function () {\n      if (!props.filterSort) {\n        return filledSearchOptions.value;\n      }\n      return _toConsumableArray(filledSearchOptions.value).sort(function (a, b) {\n        return props.filterSort(a, b);\n      });\n    });\n    var displayOptions = computed(function () {\n      return flattenOptions(orderedFilteredOptions.value, {\n        fieldNames: mergedFieldNames.value,\n        childrenAsData: childrenAsData.value\n      });\n    });\n    // =========================== Change ===========================\n    var triggerChange = function triggerChange(values) {\n      var labeledValues = convert2LabelValues(values);\n      setInternalValue(labeledValues);\n      if (props.onChange && (\n      // Trigger event only when value changed\n      labeledValues.length !== mergedValues.value.length || labeledValues.some(function (newVal, index) {\n        var _a;\n        return ((_a = mergedValues.value[index]) === null || _a === void 0 ? void 0 : _a.value) !== (newVal === null || newVal === void 0 ? void 0 : newVal.value);\n      }))) {\n        var returnValues = props.labelInValue ? labeledValues.map(function (v) {\n          return _extends(_extends({}, v), {\n            originLabel: v.label,\n            label: typeof v.label === 'function' ? v.label() : v.label\n          });\n        }) : labeledValues.map(function (v) {\n          return v.value;\n        });\n        var returnOptions = labeledValues.map(function (v) {\n          return injectPropsWithOption(getMixedOption(v.value));\n        });\n        props.onChange(\n        // Value\n        multiple.value ? returnValues : returnValues[0],\n        // Option\n        multiple.value ? returnOptions : returnOptions[0]);\n      }\n    };\n    // ======================= Accessibility ========================\n    var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeValue = _useState2[0],\n      setActiveValue = _useState2[1];\n    var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      accessibilityIndex = _useState4[0],\n      setAccessibilityIndex = _useState4[1];\n    var mergedDefaultActiveFirstOption = computed(function () {\n      return props.defaultActiveFirstOption !== undefined ? props.defaultActiveFirstOption : props.mode !== 'combobox';\n    });\n    var onActiveValue = function onActiveValue(active, index) {\n      var _ref3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref3$source = _ref3.source,\n        source = _ref3$source === void 0 ? 'keyboard' : _ref3$source;\n      setAccessibilityIndex(index);\n      if (props.backfill && props.mode === 'combobox' && active !== null && source === 'keyboard') {\n        setActiveValue(String(active));\n      }\n    };\n    // ========================= OptionList =========================\n    var triggerSelect = function triggerSelect(val, selected) {\n      var getSelectEnt = function getSelectEnt() {\n        var _a;\n        var option = getMixedOption(val);\n        var originLabel = option === null || option === void 0 ? void 0 : option[mergedFieldNames.value.label];\n        return [props.labelInValue ? {\n          label: typeof originLabel === 'function' ? originLabel() : originLabel,\n          originLabel: originLabel,\n          value: val,\n          key: (_a = option === null || option === void 0 ? void 0 : option.key) !== null && _a !== void 0 ? _a : val\n        } : val, injectPropsWithOption(option)];\n      };\n      if (selected && props.onSelect) {\n        var _getSelectEnt = getSelectEnt(),\n          _getSelectEnt2 = _slicedToArray(_getSelectEnt, 2),\n          wrappedValue = _getSelectEnt2[0],\n          option = _getSelectEnt2[1];\n        props.onSelect(wrappedValue, option);\n      } else if (!selected && props.onDeselect) {\n        var _getSelectEnt3 = getSelectEnt(),\n          _getSelectEnt4 = _slicedToArray(_getSelectEnt3, 2),\n          _wrappedValue = _getSelectEnt4[0],\n          _option = _getSelectEnt4[1];\n        props.onDeselect(_wrappedValue, _option);\n      }\n    };\n    // Used for OptionList selection\n    var onInternalSelect = function onInternalSelect(val, info) {\n      var cloneValues;\n      // Single mode always trigger select only with option list\n      var mergedSelect = multiple.value ? info.selected : true;\n      if (mergedSelect) {\n        cloneValues = multiple.value ? [].concat(_toConsumableArray(mergedValues.value), [val]) : [val];\n      } else {\n        cloneValues = mergedValues.value.filter(function (v) {\n          return v.value !== val;\n        });\n      }\n      triggerChange(cloneValues);\n      triggerSelect(val, mergedSelect);\n      // Clean search value if single or configured\n      if (props.mode === 'combobox') {\n        // setSearchValue(String(val));\n        setActiveValue('');\n      } else if (!multiple.value || props.autoClearSearchValue) {\n        setSearchValue('');\n        setActiveValue('');\n      }\n    };\n    // ======================= Display Change =======================\n    // BaseSelect display values change\n    var onDisplayValuesChange = function onDisplayValuesChange(nextValues, info) {\n      triggerChange(nextValues);\n      if (info.type === 'remove' || info.type === 'clear') {\n        info.values.forEach(function (item) {\n          triggerSelect(item.value, false);\n        });\n      }\n    };\n    // =========================== Search ===========================\n    var onInternalSearch = function onInternalSearch(searchText, info) {\n      var _a;\n      setSearchValue(searchText);\n      setActiveValue(null);\n      // [Submit] Tag mode should flush input\n      if (info.source === 'submit') {\n        var formatted = (searchText || '').trim();\n        // prevent empty tags from appearing when you click the Enter button\n        if (formatted) {\n          var newRawValues = Array.from(new Set([].concat(_toConsumableArray(rawValues.value), [formatted])));\n          triggerChange(newRawValues);\n          triggerSelect(formatted, true);\n          setSearchValue('');\n        }\n        return;\n      }\n      if (info.source !== 'blur') {\n        if (props.mode === 'combobox') {\n          triggerChange(searchText);\n        }\n        (_a = props.onSearch) === null || _a === void 0 ? void 0 : _a.call(props, searchText);\n      }\n    };\n    var onInternalSearchSplit = function onInternalSearchSplit(words) {\n      var patchValues = words;\n      if (props.mode !== 'tags') {\n        patchValues = words.map(function (word) {\n          var opt = labelOptions.value.get(word);\n          return opt === null || opt === void 0 ? void 0 : opt.value;\n        }).filter(function (val) {\n          return val !== undefined;\n        });\n      }\n      var newRawValues = Array.from(new Set([].concat(_toConsumableArray(rawValues.value), _toConsumableArray(patchValues))));\n      triggerChange(newRawValues);\n      newRawValues.forEach(function (newRawValue) {\n        triggerSelect(newRawValue, true);\n      });\n    };\n    var realVirtual = computed(function () {\n      return props.virtual !== false && props.dropdownMatchSelectWidth !== false;\n    });\n    useProvideSelectProps(toReactive(_extends(_extends({}, parsedOptions), {\n      flattenOptions: displayOptions,\n      onActiveValue: onActiveValue,\n      defaultActiveFirstOption: mergedDefaultActiveFirstOption,\n      onSelect: onInternalSelect,\n      menuItemSelectedIcon: toRef(props, 'menuItemSelectedIcon'),\n      rawValues: rawValues,\n      fieldNames: mergedFieldNames,\n      virtual: realVirtual,\n      listHeight: toRef(props, 'listHeight'),\n      listItemHeight: toRef(props, 'listItemHeight'),\n      childrenAsData: childrenAsData\n    })));\n    // ========================== Warning ===========================\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(function () {\n        warningProps(props);\n      }, {\n        flush: 'post'\n      });\n    }\n    var selectRef = ref();\n    expose({\n      focus: function focus() {\n        var _a;\n        (_a = selectRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      blur: function blur() {\n        var _a;\n        (_a = selectRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n      },\n      scrollTo: function scrollTo(arg) {\n        var _a;\n        (_a = selectRef.value) === null || _a === void 0 ? void 0 : _a.scrollTo(arg);\n      }\n    });\n    var pickProps = computed(function () {\n      return omit(props, ['id', 'mode', 'prefixCls', 'backfill', 'fieldNames',\n      // Search\n      'inputValue', 'searchValue', 'onSearch', 'autoClearSearchValue',\n      // Select\n      'onSelect', 'onDeselect', 'dropdownMatchSelectWidth',\n      // Options\n      'filterOption', 'filterSort', 'optionFilterProp', 'optionLabelProp', 'options', 'children', 'defaultActiveFirstOption', 'menuItemSelectedIcon', 'virtual', 'listHeight', 'listItemHeight',\n      // Value\n      'value', 'defaultValue', 'labelInValue', 'onChange']);\n    });\n    return function () {\n      return _createVNode(BaseSelect, _objectSpread(_objectSpread(_objectSpread({}, pickProps.value), attrs), {}, {\n        \"id\": mergedId,\n        \"prefixCls\": props.prefixCls,\n        \"ref\": selectRef,\n        \"omitDomProps\": OMIT_DOM_PROPS,\n        \"mode\": props.mode,\n        \"displayValues\": displayValues.value,\n        \"onDisplayValuesChange\": onDisplayValuesChange,\n        \"searchValue\": mergedSearchValue.value,\n        \"onSearch\": onInternalSearch,\n        \"onSearchSplit\": onInternalSearchSplit,\n        \"dropdownMatchSelectWidth\": props.dropdownMatchSelectWidth,\n        \"OptionList\": OptionList,\n        \"emptyOptions\": !displayOptions.value.length,\n        \"activeValue\": activeValue.value,\n        \"activeDescendantId\": \"\".concat(mergedId, \"_list_\").concat(accessibilityIndex.value)\n      }), slots);\n    };\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}