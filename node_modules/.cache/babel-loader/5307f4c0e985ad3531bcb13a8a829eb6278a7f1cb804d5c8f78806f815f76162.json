{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport devWarning from '../../vc-util/devWarning';\nimport { renderSlot } from 'vue';\nimport { SELECTION_COLUMN } from './useSelection';\nimport { EXPAND_COLUMN } from '../../vc-table';\nfunction fillSlots(columns, contextSlots) {\n  var $slots = contextSlots.value;\n  return columns.map(function (column) {\n    var _a;\n    if (column === SELECTION_COLUMN || column === EXPAND_COLUMN) return column;\n    var cloneColumn = _extends({}, column);\n    var _cloneColumn$slots = cloneColumn.slots,\n      slots = _cloneColumn$slots === void 0 ? {} : _cloneColumn$slots;\n    cloneColumn.__originColumn__ = column;\n    devWarning(!('slots' in cloneColumn), 'Table', '`column.slots` is deprecated. Please use `v-slot:headerCell` `v-slot:bodyCell` instead.');\n    Object.keys(slots).forEach(function (key) {\n      var name = slots[key];\n      if (cloneColumn[key] === undefined && $slots[name]) {\n        cloneColumn[key] = $slots[name];\n      }\n    });\n    if (contextSlots.value.headerCell && !((_a = column.slots) === null || _a === void 0 ? void 0 : _a.title)) {\n      cloneColumn.title = renderSlot(contextSlots.value, 'headerCell', {\n        title: column.title,\n        column: column\n      }, function () {\n        return [column.title];\n      });\n    }\n    if ('children' in cloneColumn && Array.isArray(cloneColumn.children)) {\n      cloneColumn.children = fillSlots(cloneColumn.children, contextSlots);\n    }\n    return cloneColumn;\n  });\n}\nexport default function useColumns(contextSlots) {\n  var filledColumns = function filledColumns(columns) {\n    return fillSlots(columns, contextSlots);\n  };\n  return [filledColumns];\n}","map":{"version":3,"names":["_extends","devWarning","renderSlot","SELECTION_COLUMN","EXPAND_COLUMN","fillSlots","columns","contextSlots","$slots","value","map","column","_a","cloneColumn","_cloneColumn$slots","slots","__originColumn__","Object","keys","forEach","key","name","undefined","headerCell","title","Array","isArray","children","useColumns","filledColumns"],"sources":["D:/Desktop/Code/SearchGeeks/SearchGeeks-frontend/node_modules/ant-design-vue/es/table/hooks/useColumns.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport devWarning from '../../vc-util/devWarning';\nimport { renderSlot } from 'vue';\nimport { SELECTION_COLUMN } from './useSelection';\nimport { EXPAND_COLUMN } from '../../vc-table';\nfunction fillSlots(columns, contextSlots) {\n  var $slots = contextSlots.value;\n  return columns.map(function (column) {\n    var _a;\n    if (column === SELECTION_COLUMN || column === EXPAND_COLUMN) return column;\n    var cloneColumn = _extends({}, column);\n    var _cloneColumn$slots = cloneColumn.slots,\n      slots = _cloneColumn$slots === void 0 ? {} : _cloneColumn$slots;\n    cloneColumn.__originColumn__ = column;\n    devWarning(!('slots' in cloneColumn), 'Table', '`column.slots` is deprecated. Please use `v-slot:headerCell` `v-slot:bodyCell` instead.');\n    Object.keys(slots).forEach(function (key) {\n      var name = slots[key];\n      if (cloneColumn[key] === undefined && $slots[name]) {\n        cloneColumn[key] = $slots[name];\n      }\n    });\n    if (contextSlots.value.headerCell && !((_a = column.slots) === null || _a === void 0 ? void 0 : _a.title)) {\n      cloneColumn.title = renderSlot(contextSlots.value, 'headerCell', {\n        title: column.title,\n        column: column\n      }, function () {\n        return [column.title];\n      });\n    }\n    if ('children' in cloneColumn && Array.isArray(cloneColumn.children)) {\n      cloneColumn.children = fillSlots(cloneColumn.children, contextSlots);\n    }\n    return cloneColumn;\n  });\n}\nexport default function useColumns(contextSlots) {\n  var filledColumns = function filledColumns(columns) {\n    return fillSlots(columns, contextSlots);\n  };\n  return [filledColumns];\n}"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,UAAU,QAAQ,KAAK;AAChC,SAASC,gBAAgB,QAAQ,gBAAgB;AACjD,SAASC,aAAa,QAAQ,gBAAgB;AAC9C,SAASC,SAASA,CAACC,OAAO,EAAEC,YAAY,EAAE;EACxC,IAAIC,MAAM,GAAGD,YAAY,CAACE,KAAK;EAC/B,OAAOH,OAAO,CAACI,GAAG,CAAC,UAAUC,MAAM,EAAE;IACnC,IAAIC,EAAE;IACN,IAAID,MAAM,KAAKR,gBAAgB,IAAIQ,MAAM,KAAKP,aAAa,EAAE,OAAOO,MAAM;IAC1E,IAAIE,WAAW,GAAGb,QAAQ,CAAC,CAAC,CAAC,EAAEW,MAAM,CAAC;IACtC,IAAIG,kBAAkB,GAAGD,WAAW,CAACE,KAAK;MACxCA,KAAK,GAAGD,kBAAkB,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,GAAGA,kBAAkB;IACjED,WAAW,CAACG,gBAAgB,GAAGL,MAAM;IACrCV,UAAU,CAAC,EAAE,OAAO,IAAIY,WAAW,CAAC,EAAE,OAAO,EAAE,yFAAyF,CAAC;IACzII,MAAM,CAACC,IAAI,CAACH,KAAK,CAAC,CAACI,OAAO,CAAC,UAAUC,GAAG,EAAE;MACxC,IAAIC,IAAI,GAAGN,KAAK,CAACK,GAAG,CAAC;MACrB,IAAIP,WAAW,CAACO,GAAG,CAAC,KAAKE,SAAS,IAAId,MAAM,CAACa,IAAI,CAAC,EAAE;QAClDR,WAAW,CAACO,GAAG,CAAC,GAAGZ,MAAM,CAACa,IAAI,CAAC;MACjC;IACF,CAAC,CAAC;IACF,IAAId,YAAY,CAACE,KAAK,CAACc,UAAU,IAAI,EAAE,CAACX,EAAE,GAAGD,MAAM,CAACI,KAAK,MAAM,IAAI,IAAIH,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACY,KAAK,CAAC,EAAE;MACzGX,WAAW,CAACW,KAAK,GAAGtB,UAAU,CAACK,YAAY,CAACE,KAAK,EAAE,YAAY,EAAE;QAC/De,KAAK,EAAEb,MAAM,CAACa,KAAK;QACnBb,MAAM,EAAEA;MACV,CAAC,EAAE,YAAY;QACb,OAAO,CAACA,MAAM,CAACa,KAAK,CAAC;MACvB,CAAC,CAAC;IACJ;IACA,IAAI,UAAU,IAAIX,WAAW,IAAIY,KAAK,CAACC,OAAO,CAACb,WAAW,CAACc,QAAQ,CAAC,EAAE;MACpEd,WAAW,CAACc,QAAQ,GAAGtB,SAAS,CAACQ,WAAW,CAACc,QAAQ,EAAEpB,YAAY,CAAC;IACtE;IACA,OAAOM,WAAW;EACpB,CAAC,CAAC;AACJ;AACA,eAAe,SAASe,UAAUA,CAACrB,YAAY,EAAE;EAC/C,IAAIsB,aAAa,GAAG,SAASA,aAAaA,CAACvB,OAAO,EAAE;IAClD,OAAOD,SAAS,CAACC,OAAO,EAAEC,YAAY,CAAC;EACzC,CAAC;EACD,OAAO,CAACsB,aAAa,CAAC;AACxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}