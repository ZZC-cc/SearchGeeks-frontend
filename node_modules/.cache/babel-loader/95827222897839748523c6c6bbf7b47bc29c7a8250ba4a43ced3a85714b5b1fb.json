{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport hash from '@emotion/hash';\nimport { ATTR_TOKEN, CSS_IN_JS_INSTANCE, CSS_IN_JS_INSTANCE_ID } from '../StyleContext';\nimport useGlobalCache from './useGlobalCache';\nimport { flattenToken, token2key } from '../util';\nimport { ref, computed } from 'vue';\nvar EMPTY_OVERRIDE = {};\n// Generate different prefix to make user selector break in production env.\n// This helps developer not to do style override directly on the hash id.\nvar hashPrefix = process.env.NODE_ENV !== 'production' ? 'css-dev-only-do-not-override' : 'css';\nvar tokenKeys = new Map();\nfunction recordCleanToken(tokenKey) {\n  tokenKeys.set(tokenKey, (tokenKeys.get(tokenKey) || 0) + 1);\n}\nfunction removeStyleTags(key) {\n  if (typeof document !== 'undefined') {\n    var styles = document.querySelectorAll(\"style[\".concat(ATTR_TOKEN, \"=\\\"\").concat(key, \"\\\"]\"));\n    styles.forEach(function (style) {\n      var _a;\n      if (style[CSS_IN_JS_INSTANCE] === CSS_IN_JS_INSTANCE_ID) {\n        (_a = style.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(style);\n      }\n    });\n  }\n}\n// Remove will check current keys first\nfunction cleanTokenStyle(tokenKey) {\n  tokenKeys.set(tokenKey, (tokenKeys.get(tokenKey) || 0) - 1);\n  var tokenKeyList = Array.from(tokenKeys.keys());\n  var cleanableKeyList = tokenKeyList.filter(function (key) {\n    var count = tokenKeys.get(key) || 0;\n    return count <= 0;\n  });\n  if (cleanableKeyList.length < tokenKeyList.length) {\n    cleanableKeyList.forEach(function (key) {\n      removeStyleTags(key);\n      tokenKeys.delete(key);\n    });\n  }\n}\n/**\n * Cache theme derivative token as global shared one\n * @param theme Theme entity\n * @param tokens List of tokens, used for cache. Please do not dynamic generate object directly\n * @param option Additional config\n * @returns Call Theme.getDerivativeToken(tokenObject) to get token\n */\nexport default function useCacheToken(theme, tokens) {\n  var option = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ref({});\n  // Basic - We do basic cache here\n  var mergedToken = computed(function () {\n    return _extends.apply(void 0, [{}].concat(_toConsumableArray(tokens.value)));\n  });\n  var tokenStr = computed(function () {\n    return flattenToken(mergedToken.value);\n  });\n  var overrideTokenStr = computed(function () {\n    return flattenToken(option.value.override || EMPTY_OVERRIDE);\n  });\n  var cachedToken = useGlobalCache('token', computed(function () {\n    return [option.value.salt || '', theme.value.id, tokenStr.value, overrideTokenStr.value];\n  }), function () {\n    var _option$value = option.value,\n      _option$value$salt = _option$value.salt,\n      salt = _option$value$salt === void 0 ? '' : _option$value$salt,\n      _option$value$overrid = _option$value.override,\n      override = _option$value$overrid === void 0 ? EMPTY_OVERRIDE : _option$value$overrid,\n      formatToken = _option$value.formatToken;\n    var derivativeToken = theme.value.getDerivativeToken(mergedToken.value);\n    // Merge with override\n    var mergedDerivativeToken = _extends(_extends({}, derivativeToken), override);\n    // Format if needed\n    if (formatToken) {\n      mergedDerivativeToken = formatToken(mergedDerivativeToken);\n    }\n    // Optimize for `useStyleRegister` performance\n    var tokenKey = token2key(mergedDerivativeToken, salt);\n    mergedDerivativeToken._tokenKey = tokenKey;\n    recordCleanToken(tokenKey);\n    var hashId = \"\".concat(hashPrefix, \"-\").concat(hash(tokenKey));\n    mergedDerivativeToken._hashId = hashId; // Not used\n    return [mergedDerivativeToken, hashId];\n  }, function (cache) {\n    // Remove token will remove all related style\n    cleanTokenStyle(cache[0]._tokenKey);\n  });\n  return cachedToken;\n}","map":{"version":3,"names":["_toConsumableArray","_extends","hash","ATTR_TOKEN","CSS_IN_JS_INSTANCE","CSS_IN_JS_INSTANCE_ID","useGlobalCache","flattenToken","token2key","ref","computed","EMPTY_OVERRIDE","hashPrefix","process","env","NODE_ENV","tokenKeys","Map","recordCleanToken","tokenKey","set","get","removeStyleTags","key","document","styles","querySelectorAll","concat","forEach","style","_a","parentNode","removeChild","cleanTokenStyle","tokenKeyList","Array","from","keys","cleanableKeyList","filter","count","length","delete","useCacheToken","theme","tokens","option","arguments","undefined","mergedToken","apply","value","tokenStr","overrideTokenStr","override","cachedToken","salt","id","_option$value","_option$value$salt","_option$value$overrid","formatToken","derivativeToken","getDerivativeToken","mergedDerivativeToken","_tokenKey","hashId","_hashId","cache"],"sources":["D:/Desktop/Code/CcAgSearch/ccso-frontend/node_modules/ant-design-vue/es/_util/cssinjs/hooks/useCacheToken.js"],"sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport hash from '@emotion/hash';\nimport { ATTR_TOKEN, CSS_IN_JS_INSTANCE, CSS_IN_JS_INSTANCE_ID } from '../StyleContext';\nimport useGlobalCache from './useGlobalCache';\nimport { flattenToken, token2key } from '../util';\nimport { ref, computed } from 'vue';\nvar EMPTY_OVERRIDE = {};\n// Generate different prefix to make user selector break in production env.\n// This helps developer not to do style override directly on the hash id.\nvar hashPrefix = process.env.NODE_ENV !== 'production' ? 'css-dev-only-do-not-override' : 'css';\nvar tokenKeys = new Map();\nfunction recordCleanToken(tokenKey) {\n  tokenKeys.set(tokenKey, (tokenKeys.get(tokenKey) || 0) + 1);\n}\nfunction removeStyleTags(key) {\n  if (typeof document !== 'undefined') {\n    var styles = document.querySelectorAll(\"style[\".concat(ATTR_TOKEN, \"=\\\"\").concat(key, \"\\\"]\"));\n    styles.forEach(function (style) {\n      var _a;\n      if (style[CSS_IN_JS_INSTANCE] === CSS_IN_JS_INSTANCE_ID) {\n        (_a = style.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(style);\n      }\n    });\n  }\n}\n// Remove will check current keys first\nfunction cleanTokenStyle(tokenKey) {\n  tokenKeys.set(tokenKey, (tokenKeys.get(tokenKey) || 0) - 1);\n  var tokenKeyList = Array.from(tokenKeys.keys());\n  var cleanableKeyList = tokenKeyList.filter(function (key) {\n    var count = tokenKeys.get(key) || 0;\n    return count <= 0;\n  });\n  if (cleanableKeyList.length < tokenKeyList.length) {\n    cleanableKeyList.forEach(function (key) {\n      removeStyleTags(key);\n      tokenKeys.delete(key);\n    });\n  }\n}\n/**\n * Cache theme derivative token as global shared one\n * @param theme Theme entity\n * @param tokens List of tokens, used for cache. Please do not dynamic generate object directly\n * @param option Additional config\n * @returns Call Theme.getDerivativeToken(tokenObject) to get token\n */\nexport default function useCacheToken(theme, tokens) {\n  var option = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ref({});\n  // Basic - We do basic cache here\n  var mergedToken = computed(function () {\n    return _extends.apply(void 0, [{}].concat(_toConsumableArray(tokens.value)));\n  });\n  var tokenStr = computed(function () {\n    return flattenToken(mergedToken.value);\n  });\n  var overrideTokenStr = computed(function () {\n    return flattenToken(option.value.override || EMPTY_OVERRIDE);\n  });\n  var cachedToken = useGlobalCache('token', computed(function () {\n    return [option.value.salt || '', theme.value.id, tokenStr.value, overrideTokenStr.value];\n  }), function () {\n    var _option$value = option.value,\n      _option$value$salt = _option$value.salt,\n      salt = _option$value$salt === void 0 ? '' : _option$value$salt,\n      _option$value$overrid = _option$value.override,\n      override = _option$value$overrid === void 0 ? EMPTY_OVERRIDE : _option$value$overrid,\n      formatToken = _option$value.formatToken;\n    var derivativeToken = theme.value.getDerivativeToken(mergedToken.value);\n    // Merge with override\n    var mergedDerivativeToken = _extends(_extends({}, derivativeToken), override);\n    // Format if needed\n    if (formatToken) {\n      mergedDerivativeToken = formatToken(mergedDerivativeToken);\n    }\n    // Optimize for `useStyleRegister` performance\n    var tokenKey = token2key(mergedDerivativeToken, salt);\n    mergedDerivativeToken._tokenKey = tokenKey;\n    recordCleanToken(tokenKey);\n    var hashId = \"\".concat(hashPrefix, \"-\").concat(hash(tokenKey));\n    mergedDerivativeToken._hashId = hashId; // Not used\n    return [mergedDerivativeToken, hashId];\n  }, function (cache) {\n    // Remove token will remove all related style\n    cleanTokenStyle(cache[0]._tokenKey);\n  });\n  return cachedToken;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}