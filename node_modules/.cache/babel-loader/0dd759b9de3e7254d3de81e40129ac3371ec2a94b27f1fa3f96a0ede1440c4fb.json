{"ast":null,"code":"import \"core-js/modules/es.array.unshift.js\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { createVNode as _createVNode } from \"vue\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { INTERNAL_COL_DEFINE } from './utils/legacyUtil';\nfunction ColGroup(_ref) {\n  var colWidths = _ref.colWidths,\n    columns = _ref.columns,\n    columCount = _ref.columCount;\n  var cols = [];\n  var len = columCount || columns.length;\n  // Only insert col with width & additional props\n  // Skip if rest col do not have any useful info\n  var mustInsert = false;\n  for (var i = len - 1; i >= 0; i -= 1) {\n    var width = colWidths[i];\n    var column = columns && columns[i];\n    var additionalProps = column && column[INTERNAL_COL_DEFINE];\n    if (width || additionalProps || mustInsert) {\n      var _a = additionalProps || {},\n        columnType = _a.columnType,\n        restAdditionalProps = __rest(_a, [\"columnType\"]);\n      cols.unshift(_createVNode(\"col\", _objectSpread({\n        \"key\": i,\n        \"style\": {\n          width: typeof width === 'number' ? \"\".concat(width, \"px\") : width\n        }\n      }, restAdditionalProps), null));\n      mustInsert = true;\n    }\n  }\n  return _createVNode(\"colgroup\", null, [cols]);\n}\nexport default ColGroup;","map":{"version":3,"names":["_objectSpread","createVNode","_createVNode","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","INTERNAL_COL_DEFINE","ColGroup","_ref","colWidths","columns","columCount","cols","len","mustInsert","width","column","additionalProps","_a","columnType","restAdditionalProps","unshift","concat"],"sources":["D:/Desktop/Code/CcAgSearch/ccso-frontend/node_modules/ant-design-vue/es/vc-table/ColGroup.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { createVNode as _createVNode } from \"vue\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { INTERNAL_COL_DEFINE } from './utils/legacyUtil';\nfunction ColGroup(_ref) {\n  var colWidths = _ref.colWidths,\n    columns = _ref.columns,\n    columCount = _ref.columCount;\n  var cols = [];\n  var len = columCount || columns.length;\n  // Only insert col with width & additional props\n  // Skip if rest col do not have any useful info\n  var mustInsert = false;\n  for (var i = len - 1; i >= 0; i -= 1) {\n    var width = colWidths[i];\n    var column = columns && columns[i];\n    var additionalProps = column && column[INTERNAL_COL_DEFINE];\n    if (width || additionalProps || mustInsert) {\n      var _a = additionalProps || {},\n        columnType = _a.columnType,\n        restAdditionalProps = __rest(_a, [\"columnType\"]);\n      cols.unshift(_createVNode(\"col\", _objectSpread({\n        \"key\": i,\n        \"style\": {\n          width: typeof width === 'number' ? \"\".concat(width, \"px\") : width\n        }\n      }, restAdditionalProps), null));\n      mustInsert = true;\n    }\n  }\n  return _createVNode(\"colgroup\", null, [cols]);\n}\nexport default ColGroup;"],"mappings":";AAAA,OAAOA,aAAa,MAAM,0CAA0C;AACpE,SAASC,WAAW,IAAIC,YAAY,QAAQ,KAAK;AACjD,IAAIC,MAAM,GAAG,IAAI,IAAI,IAAI,CAACA,MAAM,IAAI,UAAUC,CAAC,EAAEC,CAAC,EAAE;EAClD,IAAIC,CAAC,GAAG,CAAC,CAAC;EACV,KAAK,IAAIC,CAAC,IAAIH,CAAC,EAAE,IAAII,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACP,CAAC,EAAEG,CAAC,CAAC,IAAIF,CAAC,CAACO,OAAO,CAACL,CAAC,CAAC,GAAG,CAAC,EAAED,CAAC,CAACC,CAAC,CAAC,GAAGH,CAAC,CAACG,CAAC,CAAC;EAChG,IAAIH,CAAC,IAAI,IAAI,IAAI,OAAOI,MAAM,CAACK,qBAAqB,KAAK,UAAU,EAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEP,CAAC,GAAGC,MAAM,CAACK,qBAAqB,CAACT,CAAC,CAAC,EAAEU,CAAC,GAAGP,CAAC,CAACQ,MAAM,EAAED,CAAC,EAAE,EAAE;IAC3I,IAAIT,CAAC,CAACO,OAAO,CAACL,CAAC,CAACO,CAAC,CAAC,CAAC,GAAG,CAAC,IAAIN,MAAM,CAACC,SAAS,CAACO,oBAAoB,CAACL,IAAI,CAACP,CAAC,EAAEG,CAAC,CAACO,CAAC,CAAC,CAAC,EAAER,CAAC,CAACC,CAAC,CAACO,CAAC,CAAC,CAAC,GAAGV,CAAC,CAACG,CAAC,CAACO,CAAC,CAAC,CAAC;EACnG;EACA,OAAOR,CAAC;AACV,CAAC;AACD,SAASW,mBAAmB,QAAQ,oBAAoB;AACxD,SAASC,QAAQA,CAACC,IAAI,EAAE;EACtB,IAAIC,SAAS,GAAGD,IAAI,CAACC,SAAS;IAC5BC,OAAO,GAAGF,IAAI,CAACE,OAAO;IACtBC,UAAU,GAAGH,IAAI,CAACG,UAAU;EAC9B,IAAIC,IAAI,GAAG,EAAE;EACb,IAAIC,GAAG,GAAGF,UAAU,IAAID,OAAO,CAACN,MAAM;EACtC;EACA;EACA,IAAIU,UAAU,GAAG,KAAK;EACtB,KAAK,IAAIX,CAAC,GAAGU,GAAG,GAAG,CAAC,EAAEV,CAAC,IAAI,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAE;IACpC,IAAIY,KAAK,GAAGN,SAAS,CAACN,CAAC,CAAC;IACxB,IAAIa,MAAM,GAAGN,OAAO,IAAIA,OAAO,CAACP,CAAC,CAAC;IAClC,IAAIc,eAAe,GAAGD,MAAM,IAAIA,MAAM,CAACV,mBAAmB,CAAC;IAC3D,IAAIS,KAAK,IAAIE,eAAe,IAAIH,UAAU,EAAE;MAC1C,IAAII,EAAE,GAAGD,eAAe,IAAI,CAAC,CAAC;QAC5BE,UAAU,GAAGD,EAAE,CAACC,UAAU;QAC1BC,mBAAmB,GAAG5B,MAAM,CAAC0B,EAAE,EAAE,CAAC,YAAY,CAAC,CAAC;MAClDN,IAAI,CAACS,OAAO,CAAC9B,YAAY,CAAC,KAAK,EAAEF,aAAa,CAAC;QAC7C,KAAK,EAAEc,CAAC;QACR,OAAO,EAAE;UACPY,KAAK,EAAE,OAAOA,KAAK,KAAK,QAAQ,GAAG,EAAE,CAACO,MAAM,CAACP,KAAK,EAAE,IAAI,CAAC,GAAGA;QAC9D;MACF,CAAC,EAAEK,mBAAmB,CAAC,EAAE,IAAI,CAAC,CAAC;MAC/BN,UAAU,GAAG,IAAI;IACnB;EACF;EACA,OAAOvB,YAAY,CAAC,UAAU,EAAE,IAAI,EAAE,CAACqB,IAAI,CAAC,CAAC;AAC/C;AACA,eAAeL,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}