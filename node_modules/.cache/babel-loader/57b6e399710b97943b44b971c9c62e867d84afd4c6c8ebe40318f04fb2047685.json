{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { PresetColors } from '../theme/interface';\nvar inverseColors = PresetColors.map(function (color) {\n  return \"\".concat(color, \"-inverse\");\n});\nexport var PresetStatusColorTypes = ['success', 'processing', 'error', 'default', 'warning'];\n/**\n * determine if the color keyword belongs to the `Ant Design` {@link PresetColors}.\n * @param color color to be judged\n * @param includeInverse whether to include reversed colors\n */\nexport function isPresetColor(color) {\n  var includeInverse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  if (includeInverse) {\n    return [].concat(_toConsumableArray(inverseColors), _toConsumableArray(PresetColors)).includes(color);\n  }\n  return PresetColors.includes(color);\n}\nexport function isPresetStatusColor(color) {\n  return PresetStatusColorTypes.includes(color);\n}","map":{"version":3,"names":["_toConsumableArray","PresetColors","inverseColors","map","color","concat","PresetStatusColorTypes","isPresetColor","includeInverse","arguments","length","undefined","includes","isPresetStatusColor"],"sources":["D:/Desktop/Code/CcAgSearch/ccso-frontend/node_modules/ant-design-vue/es/_util/colors.js"],"sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { PresetColors } from '../theme/interface';\nvar inverseColors = PresetColors.map(function (color) {\n  return \"\".concat(color, \"-inverse\");\n});\nexport var PresetStatusColorTypes = ['success', 'processing', 'error', 'default', 'warning'];\n/**\n * determine if the color keyword belongs to the `Ant Design` {@link PresetColors}.\n * @param color color to be judged\n * @param includeInverse whether to include reversed colors\n */\nexport function isPresetColor(color) {\n  var includeInverse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  if (includeInverse) {\n    return [].concat(_toConsumableArray(inverseColors), _toConsumableArray(PresetColors)).includes(color);\n  }\n  return PresetColors.includes(color);\n}\nexport function isPresetStatusColor(color) {\n  return PresetStatusColorTypes.includes(color);\n}"],"mappings":"AAAA,OAAOA,kBAAkB,MAAM,8CAA8C;AAC7E,SAASC,YAAY,QAAQ,oBAAoB;AACjD,IAAIC,aAAa,GAAGD,YAAY,CAACE,GAAG,CAAC,UAAUC,KAAK,EAAE;EACpD,OAAO,EAAE,CAACC,MAAM,CAACD,KAAK,EAAE,UAAU,CAAC;AACrC,CAAC,CAAC;AACF,OAAO,IAAIE,sBAAsB,GAAG,CAAC,SAAS,EAAE,YAAY,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,CAAC;AAC5F;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,aAAaA,CAACH,KAAK,EAAE;EACnC,IAAII,cAAc,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI;EAC7F,IAAID,cAAc,EAAE;IAClB,OAAO,EAAE,CAACH,MAAM,CAACL,kBAAkB,CAACE,aAAa,CAAC,EAAEF,kBAAkB,CAACC,YAAY,CAAC,CAAC,CAACW,QAAQ,CAACR,KAAK,CAAC;EACvG;EACA,OAAOH,YAAY,CAACW,QAAQ,CAACR,KAAK,CAAC;AACrC;AACA,OAAO,SAASS,mBAAmBA,CAACT,KAAK,EAAE;EACzC,OAAOE,sBAAsB,CAACM,QAAQ,CAACR,KAAK,CAAC;AAC/C"},"metadata":{},"sourceType":"module","externalDependencies":[]}