[{"D:\\Desktop\\Code\\SearchGeeks\\SearchGeeks-frontend\\src\\main.ts":"1","D:\\Desktop\\Code\\SearchGeeks\\SearchGeeks-frontend\\src\\App.vue":"2","D:\\Desktop\\Code\\SearchGeeks\\SearchGeeks-frontend\\src\\router\\index.ts":"3","D:\\Desktop\\Code\\SearchGeeks\\SearchGeeks-frontend\\src\\pages\\indexPage.vue":"4","D:\\Desktop\\Code\\SearchGeeks\\SearchGeeks-frontend\\src\\components\\PostList.vue":"5","D:\\Desktop\\Code\\SearchGeeks\\SearchGeeks-frontend\\src\\components\\PictureList.vue":"6","D:\\Desktop\\Code\\SearchGeeks\\SearchGeeks-frontend\\src\\components\\ChatList.vue":"7","D:\\Desktop\\Code\\SearchGeeks\\SearchGeeks-frontend\\src\\components\\UserList.vue":"8","D:\\Desktop\\Code\\SearchGeeks\\SearchGeeks-frontend\\src\\components\\MyDivider.vue":"9","D:\\Desktop\\Code\\SearchGeeks\\SearchGeeks-frontend\\src\\plugins\\myAxios.ts":"10"},{"size":231,"mtime":1684554739824,"results":"11","hashOfConfig":"12"},{"size":316,"mtime":1684554722001,"results":"13","hashOfConfig":"12"},{"size":386,"mtime":1684555235076,"results":"14","hashOfConfig":"12"},{"size":3904,"mtime":1684334965878,"results":"15","hashOfConfig":"12"},{"size":886,"mtime":1684331081859,"results":"16","hashOfConfig":"12"},{"size":772,"mtime":1684329388175,"results":"17","hashOfConfig":"12"},{"size":832,"mtime":1684414138323,"results":"18","hashOfConfig":"12"},{"size":909,"mtime":1684464876902,"results":"19","hashOfConfig":"12"},{"size":155,"mtime":1683392522619,"results":"20","hashOfConfig":"12"},{"size":661,"mtime":1683526626130,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"o53spg",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},"D:\\Desktop\\Code\\SearchGeeks\\SearchGeeks-frontend\\src\\main.ts",[],"D:\\Desktop\\Code\\SearchGeeks\\SearchGeeks-frontend\\src\\App.vue",[],"D:\\Desktop\\Code\\SearchGeeks\\SearchGeeks-frontend\\src\\router\\index.ts",[],"D:\\Desktop\\Code\\SearchGeeks\\SearchGeeks-frontend\\src\\pages\\indexPage.vue",["48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63"],"<template>\n  <div class=\"index-page\">\n    <a-input-search\n      v-model:value=\"searchText\"\n      placeholder=\"请输入搜索内容...\"\n      enter-button=\"聚合搜索\"\n      size=\"large\"\n      @search=\"onSearch\"\n    />\n    <MyDivider />\n    <a-tabs v-model:activeKey=\"activeKey\" @change=\"onTabChange\">\n      <a-tab-pane key=\"post\" tab=\"文章\">\n        <post-list :post-list=\"postList\" />\n      </a-tab-pane>\n      <a-tab-pane key=\"picture\" tab=\"图片\">\n        <picture-list :picture-list=\"pictureList\" />\n      </a-tab-pane>\n      <a-tab-pane key=\"user\" tab=\"用户\">\n        <user-list :user-list=\"userList\" />\n      </a-tab-pane>\n      <a-tab-pane key=\"chat\" tab=\"ChatGPT\">\n        <chat-list :chat-list=\"chatList\" />\n      </a-tab-pane>\n    </a-tabs>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref, watchEffect } from \"vue\";\nimport PostList from \"@/components/PostList.vue\";\nimport PictureList from \"@/components/PictureList.vue\";\nimport UserList from \"@/components/UserList.vue\";\nimport ChatList from \"@/components/ChatList.vue\";\nimport MyDivider from \"@/components/MyDivider.vue\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport myAxios from \"@/plugins/myAxios\";\nimport { message } from \"ant-design-vue\";\n\nconst postList = ref([]);\n\nconst userList = ref([]);\n\nconst pictureList = ref([]);\n\nconst chatList = ref([]);\n\nconst router = useRouter();\nconst route = useRoute();\nconst activeKey = route.params.category;\n\nconst initSearchParams = {\n  type: activeKey,\n  text: \"\",\n  pageSize: 15,\n  pageNum: 1,\n};\n\nconst searchText = ref(route.query.text || \"\");\n\n/**\n * 加载数据\n * @param params\n */\nconst loadDataOld = (params: any) => {\n  const postQuery = {\n    ...params,\n    searchText: params.text,\n  };\n  myAxios.post(\"post/list/page/vo\", postQuery).then((res: any) => {\n    postList.value = res.records;\n  });\n  const userQuery = {\n    ...params,\n    userName: params.text,\n  };\n  myAxios.post(\"user/list/page/vo\", userQuery).then((res: any) => {\n    userList.value = res.records;\n  });\n  const pictureQuery = {\n    ...params,\n    searchText: params.text,\n  };\n  myAxios.post(\"picture/list/page/vo\", pictureQuery).then((res: any) => {\n    pictureList.value = res.records;\n  });\n};\n\n/**\n * 加载聚合数据\n * @param params\n */\nconst loadAllData = (params: any) => {\n  const query = {\n    ...params,\n    searchText: params.text,\n  };\n  myAxios.post(\"search/all\", query).then((res: any) => {\n    postList.value = res.postList;\n    userList.value = res.userList;\n    pictureList.value = res.pictureList;\n    chatList.value = res.chatList;\n  });\n};\n/**\n * 加载单类数据\n * @param params\n */\nconst loadData = (params: any) => {\n  const { type } = params;\n  if (!type) {\n    message.error(\"类别为空\");\n    return;\n  }\n  const query = {\n    ...params,\n    searchText: params.text,\n  };\n  myAxios.post(\"search/all\", query).then((res: any) => {\n    if (type === \"post\") {\n      postList.value = res.dataList;\n    } else if (type === \"user\") {\n      userList.value = res.dataList;\n    } else if (type === \"picture\") {\n      pictureList.value = res.dataList;\n    } else if (type === \"chat\") {\n      chatList.value = res.dataList;\n    }\n  });\n};\n\nconst searchParams = ref(initSearchParams);\n\nwatchEffect(() => {\n  searchParams.value = {\n    ...initSearchParams,\n    text: route.query.text,\n    type: route.params.category,\n  } as any;\n  loadData(searchParams.value);\n});\n\nconst onSearch = (value: string) => {\n  router.push({\n    query: {\n      ...searchParams.value,\n      text: value,\n    },\n  });\n  loadData(searchParams.value);\n};\nconst onTabChange = (key: string) => {\n  router.push({\n    path: `/${key}`,\n    query: searchParams.value,\n  });\n};\n</script>\n<style scoped>\n.chat-list .ant-list-item-meta-title {\n  display: none;\n}\n\n.chat-list .ant-list-item-meta-description {\n  color: #fff;\n  background-color: #007bff;\n  border-color: #007bff;\n}\n</style>\n","D:\\Desktop\\Code\\SearchGeeks\\SearchGeeks-frontend\\src\\components\\PostList.vue",["64","65","66"],"<template>\n  <a-list item-layout=\"horizontal\" :data-source=\"props.postList\">\n    <template #renderItem=\"{ item }\">\n      <a-list-item>\n        <a-list-item-meta>\n          <template #title>\n            <h4>{{ item.title }}</h4>\n          </template>\n          <template #avatar>\n            <a-avatar style=\"background-color: #87d068\">大佬</a-avatar>\n          </template>\n          <template #description>\n            <div style=\"max-width: 800px\">{{ item.content }}</div>\n          </template>\n        </a-list-item-meta>\n      </a-list-item>\n    </template>\n  </a-list>\n</template>\n<script setup lang=\"ts\">\nimport gege from \"../assets/gege.jpg\";\nimport { withDefaults, defineProps, toRefs } from \"vue\";\n\ninterface Props {\n  postList: any[];\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  postList: () => [],\n});\n</script>\n<style scoped>\n.gege {\n  width: 200px;\n}\n</style>\n","D:\\Desktop\\Code\\SearchGeeks\\SearchGeeks-frontend\\src\\components\\PictureList.vue",["67","68","69"],"<template>\n  <a-list\n    item-layout=\"horizontal\"\n    :grid=\"{ gutter: 16, column: 4 }\"\n    :data-source=\"props.pictureList\"\n  >\n    <template #renderItem=\"{ item }\">\n      <a-list-item>\n        <a-card hoverabl>\n          <template #cover>\n            <img alt=\"example\" class=\"gege\" :src=\"item.url\" />\n          </template>\n          <a-card-meta :title=\"item.title\" />\n        </a-card>\n      </a-list-item>\n    </template>\n  </a-list>\n</template>\n<script setup lang=\"ts\">\nimport { withDefaults, defineProps, toRefs } from \"vue\";\nimport gege from \"@/assets/gege.jpg\";\n\ninterface Props {\n  pictureList: any[];\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  pictureList: () => [],\n});\n</script>\n<style scoped>\n.gege {\n  width: 160px;\n  height: 130px;\n}\n</style>\n","D:\\Desktop\\Code\\SearchGeeks\\SearchGeeks-frontend\\src\\components\\ChatList.vue",["70"],"<template>\n  <a-list item-layout=\"horizontal\" :data-source=\"props.chatList\">\n    <template #renderItem=\"{ item }\">\n      <a-list-item>\n        <a-list-item-meta>\n          <template #description>\n            <p>{{ item.content }}</p>\n          </template>\n          <template #title>\n            <h4>ChatGPT</h4>\n          </template>\n          <template #avatar>\n            <a-avatar :src=\"chatGPT\">ChatGPT</a-avatar>\n          </template>\n        </a-list-item-meta>\n      </a-list-item>\n    </template>\n  </a-list>\n</template>\n\n<script setup lang=\"ts\">\nimport { withDefaults, defineProps } from \"vue\";\nimport chatGPT from \"../assets/chatGPT.png\";\n\ninterface Props {\n  chatList: any[];\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  chatList: () => [],\n});\n</script>\n<style scoped>\n.chatGPT {\n  width: 200px;\n}\n</style>\n","D:\\Desktop\\Code\\SearchGeeks\\SearchGeeks-frontend\\src\\components\\UserList.vue",["71","72"],"<template>\n  <a-list item-layout=\"horizontal\" :data-source=\"props.userList\">\n    <template #renderItem=\"{ item }\">\n      <a-list-item>\n        <a-list-item-meta>\n          <template #description>\n            <p>{{ item.userProfile }}</p>\n          </template>\n          <template #title>\n            <h4>{{ item.userName }}</h4>\n          </template>\n          <template #avatar>\n            <a-avatar style=\"color: #fff; background-color: #1890ff\">{{\n              item.userName\n            }}</a-avatar>\n          </template>\n        </a-list-item-meta>\n      </a-list-item>\n    </template>\n  </a-list>\n</template>\n\n<script setup lang=\"ts\">\nimport gege from \"../assets/gege.jpg\";\nimport { withDefaults, defineProps } from \"vue\";\n\ninterface Props {\n  userList: any[];\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  userList: () => [],\n});\n</script>\n<style scoped>\n.gege {\n  width: 200px;\n}\n</style>\n","D:\\Desktop\\Code\\SearchGeeks\\SearchGeeks-frontend\\src\\components\\MyDivider.vue",[],"D:\\Desktop\\Code\\SearchGeeks\\SearchGeeks-frontend\\src\\plugins\\myAxios.ts",["73"],"import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"http://localhost:8101/api\",\n  timeout: 10000,\n  headers: {},\n});\n\n// 添加响应拦截器\ninstance.interceptors.response.use(\n  function (response) {\n    // 2xx 范围内的状态码都会触发该函数。\n    // 对响应数据做点什么\n    const data = response.data;\n    if (data.code === 0) {\n      return data.data;\n    }\n    console.error(\"request error\", data);\n    return response.data;\n  },\n  function (error) {\n    // 超出 2xx 范围的状态码都会触发该函数。\n    // 对响应错误做点什么\n    return Promise.reject(error);\n  }\n);\n\nexport default instance;\n",{"ruleId":"74","severity":1,"message":"75","line":29,"column":10,"nodeType":"76","messageId":"77","endLine":29,"endColumn":18},{"ruleId":"74","severity":1,"message":"78","line":30,"column":8,"nodeType":"76","messageId":"77","endLine":30,"endColumn":16},{"ruleId":"74","severity":1,"message":"79","line":31,"column":8,"nodeType":"76","messageId":"77","endLine":31,"endColumn":19},{"ruleId":"74","severity":1,"message":"80","line":32,"column":8,"nodeType":"76","messageId":"77","endLine":32,"endColumn":16},{"ruleId":"74","severity":1,"message":"81","line":33,"column":8,"nodeType":"76","messageId":"77","endLine":33,"endColumn":16},{"ruleId":"74","severity":1,"message":"82","line":64,"column":7,"nodeType":"76","messageId":"77","endLine":64,"endColumn":18},{"ruleId":"83","severity":1,"message":"84","line":64,"column":30,"nodeType":"85","messageId":"86","endLine":64,"endColumn":33,"suggestions":"87"},{"ruleId":"83","severity":1,"message":"84","line":69,"column":59,"nodeType":"85","messageId":"86","endLine":69,"endColumn":62,"suggestions":"88"},{"ruleId":"83","severity":1,"message":"84","line":76,"column":59,"nodeType":"85","messageId":"86","endLine":76,"endColumn":62,"suggestions":"89"},{"ruleId":"83","severity":1,"message":"84","line":83,"column":65,"nodeType":"85","messageId":"86","endLine":83,"endColumn":68,"suggestions":"90"},{"ruleId":"74","severity":1,"message":"91","line":92,"column":7,"nodeType":"76","messageId":"77","endLine":92,"endColumn":18},{"ruleId":"83","severity":1,"message":"84","line":92,"column":30,"nodeType":"85","messageId":"86","endLine":92,"endColumn":33,"suggestions":"92"},{"ruleId":"83","severity":1,"message":"84","line":97,"column":48,"nodeType":"85","messageId":"86","endLine":97,"endColumn":51,"suggestions":"93"},{"ruleId":"83","severity":1,"message":"84","line":108,"column":27,"nodeType":"85","messageId":"86","endLine":108,"endColumn":30,"suggestions":"94"},{"ruleId":"83","severity":1,"message":"84","line":118,"column":48,"nodeType":"85","messageId":"86","endLine":118,"endColumn":51,"suggestions":"95"},{"ruleId":"83","severity":1,"message":"84","line":138,"column":8,"nodeType":"85","messageId":"86","endLine":138,"endColumn":11,"suggestions":"96"},{"ruleId":"74","severity":1,"message":"97","line":21,"column":8,"nodeType":"76","messageId":"77","endLine":21,"endColumn":12},{"ruleId":"74","severity":1,"message":"98","line":22,"column":37,"nodeType":"76","messageId":"77","endLine":22,"endColumn":43},{"ruleId":"83","severity":1,"message":"84","line":25,"column":13,"nodeType":"85","messageId":"86","endLine":25,"endColumn":16,"suggestions":"99"},{"ruleId":"74","severity":1,"message":"98","line":20,"column":37,"nodeType":"76","messageId":"77","endLine":20,"endColumn":43},{"ruleId":"74","severity":1,"message":"97","line":21,"column":8,"nodeType":"76","messageId":"77","endLine":21,"endColumn":12},{"ruleId":"83","severity":1,"message":"84","line":24,"column":16,"nodeType":"85","messageId":"86","endLine":24,"endColumn":19,"suggestions":"100"},{"ruleId":"83","severity":1,"message":"84","line":26,"column":13,"nodeType":"85","messageId":"86","endLine":26,"endColumn":16,"suggestions":"101"},{"ruleId":"74","severity":1,"message":"97","line":24,"column":8,"nodeType":"76","messageId":"77","endLine":24,"endColumn":12},{"ruleId":"83","severity":1,"message":"84","line":28,"column":13,"nodeType":"85","messageId":"86","endLine":28,"endColumn":16,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":18,"column":5,"nodeType":"105","messageId":"106","endLine":18,"endColumn":18},"@typescript-eslint/no-unused-vars","'computed' is defined but never used.","Identifier","unusedVar","'PostList' is defined but never used.","'PictureList' is defined but never used.","'UserList' is defined but never used.","'ChatList' is defined but never used.","'loadDataOld' is assigned a value but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["107","108"],["109","110"],["111","112"],["113","114"],"'loadAllData' is assigned a value but never used.",["115","116"],["117","118"],["119","120"],["121","122"],["123","124"],"'gege' is defined but never used.","'toRefs' is defined but never used.",["125","126"],["127","128"],["129","130"],["131","132"],"no-console","Unexpected console statement.","MemberExpression","unexpected",{"messageId":"133","fix":"134","desc":"135"},{"messageId":"136","fix":"137","desc":"138"},{"messageId":"133","fix":"139","desc":"135"},{"messageId":"136","fix":"140","desc":"138"},{"messageId":"133","fix":"141","desc":"135"},{"messageId":"136","fix":"142","desc":"138"},{"messageId":"133","fix":"143","desc":"135"},{"messageId":"136","fix":"144","desc":"138"},{"messageId":"133","fix":"145","desc":"135"},{"messageId":"136","fix":"146","desc":"138"},{"messageId":"133","fix":"147","desc":"135"},{"messageId":"136","fix":"148","desc":"138"},{"messageId":"133","fix":"149","desc":"135"},{"messageId":"136","fix":"150","desc":"138"},{"messageId":"133","fix":"151","desc":"135"},{"messageId":"136","fix":"152","desc":"138"},{"messageId":"133","fix":"153","desc":"135"},{"messageId":"136","fix":"154","desc":"138"},{"messageId":"133","fix":"155","desc":"135"},{"messageId":"136","fix":"156","desc":"138"},{"messageId":"133","fix":"157","desc":"135"},{"messageId":"136","fix":"158","desc":"138"},{"messageId":"133","fix":"159","desc":"135"},{"messageId":"136","fix":"160","desc":"138"},{"messageId":"133","fix":"161","desc":"135"},{"messageId":"136","fix":"162","desc":"138"},"suggestUnknown",{"range":"163","text":"164"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"163","text":"165"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"166","text":"164"},{"range":"166","text":"165"},{"range":"167","text":"164"},{"range":"167","text":"165"},{"range":"168","text":"164"},{"range":"168","text":"165"},{"range":"169","text":"164"},{"range":"169","text":"165"},{"range":"170","text":"164"},{"range":"170","text":"165"},{"range":"171","text":"164"},{"range":"171","text":"165"},{"range":"172","text":"164"},{"range":"172","text":"165"},{"range":"173","text":"164"},{"range":"173","text":"165"},{"range":"174","text":"164"},{"range":"174","text":"165"},{"range":"175","text":"164"},{"range":"175","text":"165"},{"range":"176","text":"164"},{"range":"176","text":"165"},{"range":"177","text":"164"},{"range":"177","text":"165"},[1624,1627],"unknown","never",[1763,1766],[1940,1943],[2128,2131],[2249,2252],[2373,2376],[2599,2602],[2808,2811],[3300,3303],[735,738],[605,608],[682,685],[762,765]]