"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useMessage;
exports.useInternalMessage = useInternalMessage;
var _vue = require("vue");
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _vcNotification = require("../vc-notification");
var _iconsVue = _interopRequireDefault(require("@ant-design/icons-vue/lib/icons"));
var _style = _interopRequireDefault(require("./style"));
var _PurePanel = require("./PurePanel");
var _motionUtil = require("../vc-trigger/utils/motionUtil");
var _util = require("../_util/util");
var _useConfigInject2 = _interopRequireDefault(require("../config-provider/hooks/useConfigInject"));
var _classNames = _interopRequireDefault(require("../_util/classNames"));
var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};
var DEFAULT_OFFSET = 8;
var DEFAULT_DURATION = 3;
var Holder = (0, _vue.defineComponent)({
  name: 'Holder',
  inheritAttrs: false,
  props: ['top', 'prefixCls', 'getContainer', 'maxCount', 'duration', 'rtl', 'transitionName', 'onAllRemoved'],
  setup: function setup(props, _ref) {
    var expose = _ref.expose;
    var _a;
    var _useConfigInject = (0, _useConfigInject2.default)('message', props),
      getPrefixCls = _useConfigInject.getPrefixCls,
      getPopupContainer = _useConfigInject.getPopupContainer;
    var prefixCls = (0, _vue.computed)(function () {
      return getPrefixCls('message', props.prefixCls);
    });
    var _useStyle = (0, _style.default)(prefixCls),
      _useStyle2 = (0, _slicedToArray2.default)(_useStyle, 2),
      hashId = _useStyle2[1];
    // =============================== Style ===============================
    var getStyles = function getStyles() {
      var _a;
      var top = (_a = props.top) !== null && _a !== void 0 ? _a : DEFAULT_OFFSET;
      return {
        left: '50%',
        transform: 'translateX(-50%)',
        top: typeof top === 'number' ? "".concat(top, "px") : top
      };
    };
    var getClassName = function getClassName() {
      return (0, _classNames.default)(hashId.value, props.rtl ? "".concat(prefixCls.value, "-rtl") : '');
    };
    // ============================== Motion ===============================
    var getNotificationMotion = function getNotificationMotion() {
      var _a;
      return (0, _motionUtil.getMotion)({
        prefixCls: prefixCls.value,
        animation: (_a = props.animation) !== null && _a !== void 0 ? _a : "move-up",
        transitionName: props.transitionName
      });
    };
    // ============================ Close Icon =============================
    var mergedCloseIcon = (0, _vue.createVNode)("span", {
      "class": "".concat(prefixCls.value, "-close-x")
    }, [(0, _vue.createVNode)(_iconsVue.default, {
      "class": "".concat(prefixCls.value, "-close-icon")
    }, null)]);
    // ============================== Origin ===============================
    var _useVcNotification = (0, _vcNotification.useNotification)({
        //@ts-ignore
        getStyles: getStyles,
        prefixCls: prefixCls.value,
        getClassName: getClassName,
        motion: getNotificationMotion,
        closable: false,
        closeIcon: mergedCloseIcon,
        duration: (_a = props.duration) !== null && _a !== void 0 ? _a : DEFAULT_DURATION,
        getContainer: function getContainer() {
          var _a, _b;
          return ((_a = props.staticGetContainer) === null || _a === void 0 ? void 0 : _a.call(props)) || ((_b = getPopupContainer.value) === null || _b === void 0 ? void 0 : _b.call(getPopupContainer)) || document.body;
        },
        maxCount: props.maxCount,
        onAllRemoved: props.onAllRemoved
      }),
      _useVcNotification2 = (0, _slicedToArray2.default)(_useVcNotification, 2),
      api = _useVcNotification2[0],
      holder = _useVcNotification2[1];
    // ================================ Ref ================================
    expose((0, _extends2.default)((0, _extends2.default)({}, api), {
      prefixCls: prefixCls,
      hashId: hashId
    }));
    return holder;
  }
});
// ==============================================================================
// ==                                   Hook                                   ==
// ==============================================================================
var keyIndex = 0;
function useInternalMessage(messageConfig) {
  var holderRef = (0, _vue.shallowRef)(null);
  var holderKey = Symbol('messageHolderKey');
  // ================================ API ================================
  // Wrap with notification content
  // >>> close
  var close = function close(key) {
    var _a;
    (_a = holderRef.value) === null || _a === void 0 ? void 0 : _a.close(key);
  };
  // >>> Open
  var open = function open(config) {
    if (!holderRef.value) {
      var fakeResult = function fakeResult() {};
      fakeResult.then = function () {};
      return fakeResult;
    }
    var _holderRef$value = holderRef.value,
      originOpen = _holderRef$value.open,
      prefixCls = _holderRef$value.prefixCls,
      hashId = _holderRef$value.hashId;
    var noticePrefixCls = "".concat(prefixCls, "-notice");
    var _content = config.content,
      icon = config.icon,
      type = config.type,
      key = config.key,
      className = config.class,
      _onClose = config.onClose,
      restConfig = __rest(config, ["content", "icon", "type", "key", "class", "onClose"]);
    var mergedKey = key;
    if (mergedKey === undefined || mergedKey === null) {
      keyIndex += 1;
      mergedKey = "antd-message-".concat(keyIndex);
    }
    return (0, _util.wrapPromiseFn)(function (resolve) {
      originOpen((0, _extends2.default)((0, _extends2.default)({}, restConfig), {
        key: mergedKey,
        content: function content() {
          return (0, _vue.createVNode)(_PurePanel.PureContent, {
            "prefixCls": prefixCls,
            "type": type,
            "icon": typeof icon === 'function' ? icon() : icon
          }, {
            default: function _default() {
              return [typeof _content === 'function' ? _content() : _content];
            }
          });
        },
        placement: 'top',
        // @ts-ignore
        class: (0, _classNames.default)(type && "".concat(noticePrefixCls, "-").concat(type), hashId, className),
        onClose: function onClose() {
          _onClose === null || _onClose === void 0 ? void 0 : _onClose();
          resolve();
        }
      }));
      // Return close function
      return function () {
        close(mergedKey);
      };
    });
  };
  // >>> destroy
  var destroy = function destroy(key) {
    var _a;
    if (key !== undefined) {
      close(key);
    } else {
      (_a = holderRef.value) === null || _a === void 0 ? void 0 : _a.destroy();
    }
  };
  var wrapAPI = {
    open: open,
    destroy: destroy
  };
  var keys = ['info', 'success', 'warning', 'error', 'loading'];
  keys.forEach(function (type) {
    var typeOpen = function typeOpen(jointContent, duration, onClose) {
      var config;
      if (jointContent && (0, _typeof2.default)(jointContent) === 'object' && 'content' in jointContent) {
        config = jointContent;
      } else {
        config = {
          content: jointContent
        };
      }
      // Params
      var mergedDuration;
      var mergedOnClose;
      if (typeof duration === 'function') {
        mergedOnClose = duration;
      } else {
        mergedDuration = duration;
        mergedOnClose = onClose;
      }
      var mergedConfig = (0, _extends2.default)((0, _extends2.default)({
        onClose: mergedOnClose,
        duration: mergedDuration
      }, config), {
        type: type
      });
      return open(mergedConfig);
    };
    wrapAPI[type] = typeOpen;
  });
  // ============================== Return ===============================
  return [wrapAPI, function () {
    return (0, _vue.createVNode)(Holder, (0, _objectSpread2.default)((0, _objectSpread2.default)({
      "key": holderKey
    }, messageConfig), {}, {
      "ref": holderRef
    }), null);
  }];
}
function useMessage(messageConfig) {
  return useInternalMessage(messageConfig);
}