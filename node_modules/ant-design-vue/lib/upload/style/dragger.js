"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var genDraggerStyle = function genDraggerStyle(token) {
  var _$concat2;
  var componentCls = token.componentCls,
    iconCls = token.iconCls;
  return (0, _defineProperty2.default)({}, "".concat(componentCls, "-wrapper"), (0, _defineProperty2.default)({}, "".concat(componentCls, "-drag"), (_$concat2 = {
    position: 'relative',
    width: '100%',
    height: '100%',
    textAlign: 'center',
    background: token.colorFillAlter,
    border: "".concat(token.lineWidth, "px dashed ").concat(token.colorBorder),
    borderRadius: token.borderRadiusLG,
    cursor: 'pointer',
    transition: "border-color ".concat(token.motionDurationSlow)
  }, (0, _defineProperty2.default)(_$concat2, componentCls, {
    padding: "".concat(token.padding, "px 0")
  }), (0, _defineProperty2.default)(_$concat2, "".concat(componentCls, "-btn"), {
    display: 'table',
    width: '100%',
    height: '100%',
    outline: 'none'
  }), (0, _defineProperty2.default)(_$concat2, "".concat(componentCls, "-drag-container"), {
    display: 'table-cell',
    verticalAlign: 'middle'
  }), (0, _defineProperty2.default)(_$concat2, "&:not(".concat(componentCls, "-disabled):hover"), {
    borderColor: token.colorPrimaryHover
  }), (0, _defineProperty2.default)(_$concat2, "p".concat(componentCls, "-drag-icon"), (0, _defineProperty2.default)({
    marginBottom: token.margin
  }, iconCls, {
    color: token.colorPrimary,
    fontSize: token.uploadThumbnailSize
  })), (0, _defineProperty2.default)(_$concat2, "p".concat(componentCls, "-text"), {
    margin: "0 0 ".concat(token.marginXXS, "px"),
    color: token.colorTextHeading,
    fontSize: token.fontSizeLG
  }), (0, _defineProperty2.default)(_$concat2, "p".concat(componentCls, "-hint"), {
    color: token.colorTextDescription,
    fontSize: token.fontSize
  }), (0, _defineProperty2.default)(_$concat2, "&".concat(componentCls, "-disabled"), (0, _defineProperty2.default)({
    cursor: 'not-allowed'
  }, "p".concat(componentCls, "-drag-icon ").concat(iconCls, ",\n            p").concat(componentCls, "-text,\n            p").concat(componentCls, "-hint\n          "), {
    color: token.colorTextDisabled
  })), _$concat2)));
};
var _default = genDraggerStyle;
exports.default = _default;