import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _extends from "@babel/runtime/helpers/esm/extends";
// handle border collapse
function compactItemBorder(token, parentCls, options) {
  var _ref2;
  var focusElCls = options.focusElCls,
    focus = options.focus,
    borderElCls = options.borderElCls;
  var childCombinator = borderElCls ? '> *' : '';
  var hoverEffects = ['hover', focus ? 'focus' : null, 'active'].filter(Boolean).map(function (n) {
    return "&:".concat(n, " ").concat(childCombinator);
  }).join(',');
  return _ref2 = {}, _defineProperty(_ref2, "&-item:not(".concat(parentCls, "-last-item)"), {
    marginInlineEnd: -token.lineWidth
  }), _defineProperty(_ref2, '&-item', _extends(_extends(_defineProperty({}, hoverEffects, {
    zIndex: 2
  }), focusElCls ? _defineProperty({}, "&".concat(focusElCls), {
    zIndex: 2
  }) : {}), _defineProperty({}, "&[disabled] ".concat(childCombinator), {
    zIndex: 0
  }))), _ref2;
}
// handle border-radius
function compactItemBorderRadius(prefixCls, parentCls, options) {
  var _ref3;
  var borderElCls = options.borderElCls;
  var childCombinator = borderElCls ? "> ".concat(borderElCls) : '';
  return _ref3 = {}, _defineProperty(_ref3, "&-item:not(".concat(parentCls, "-first-item):not(").concat(parentCls, "-last-item) ").concat(childCombinator), {
    borderRadius: 0
  }), _defineProperty(_ref3, "&-item:not(".concat(parentCls, "-last-item)").concat(parentCls, "-first-item"), _defineProperty({}, "& ".concat(childCombinator, ", &").concat(prefixCls, "-sm ").concat(childCombinator, ", &").concat(prefixCls, "-lg ").concat(childCombinator), {
    borderStartEndRadius: 0,
    borderEndEndRadius: 0
  })), _defineProperty(_ref3, "&-item:not(".concat(parentCls, "-first-item)").concat(parentCls, "-last-item"), _defineProperty({}, "& ".concat(childCombinator, ", &").concat(prefixCls, "-sm ").concat(childCombinator, ", &").concat(prefixCls, "-lg ").concat(childCombinator), {
    borderStartStartRadius: 0,
    borderEndStartRadius: 0
  })), _ref3;
}
export function genCompactItemStyle(token) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
    focus: true
  };
  var componentCls = token.componentCls;
  var compactCls = "".concat(componentCls, "-compact");
  return _defineProperty({}, compactCls, _extends(_extends({}, compactItemBorder(token, compactCls, options)), compactItemBorderRadius(componentCls, compactCls, options)));
}